name: .NET

on:
  
  push:
    branches: [ "master" ]
    paths:
      - 'Kepware.Api/**'
      - 'Kepware.Api.Sample/**'
      - 'KepwareSync.Service/**'
      - '.github/workflows/dotnet.yml' 
      - '!*.md' # Exclude markdown files
  pull_request:
    branches: [ "master" ]
    paths:
      - 'Kepware.Api/**'
      - 'Kepware.Api.Sample/**'
      - 'KepwareSync.Service/**'
      - '.github/workflows/dotnet.yml'  
      - '!*.md' # Exclude markdown files

jobs:
  build:
    strategy:
      matrix:
        platform: [windows, ubuntu]
    runs-on: ${{ matrix.platform }}-latest
    permissions:
      contents: write
      pull-requests: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
      - uses: dotnet/nbgv@master
        id: nbgv
        with:
          setAllVars: true
      - name: Use Release Drafter
        if: ${{ github.event_name != 'pull_request' }}
        id: drafter
        uses: release-drafter/release-drafter@v6
        with:
          version: ${{ steps.nbgv.outputs.SemVer2 }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration release
      - name: Push to GitHub Packages
        if: ${{ github.event_name != 'pull_request' && matrix.platform == 'ubuntu' }}
        run: |
          dotnet nuget push ./Kepware.Api/bin/Release/*.nupkg \
            --api-key ${{ secrets.GITHUB_TOKEN }} \
            --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
      # - name: Test
      #   run: dotnet test --no-build --verbosity normal
      - name: dotnet publish
        run: dotnet publish KepwareSync.Service/Kepware.SyncService.csproj --configuration release -o publish /p:UseAppHost=true
        
      - name: Upload artifacts to release
        if: ${{ github.event_name != 'pull_request' }}
        uses: svenstaro/upload-release-action@v2
        with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            file_glob: publish/*
            asset_name: Kepware.SyncService.linux-x64
            tag: ${{ github.ref }}
            overwrite: true
            release_name:  ${{ steps.nbgv.outputs.SemVer2 }}