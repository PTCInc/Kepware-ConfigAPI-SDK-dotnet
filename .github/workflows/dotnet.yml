# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
    tags:
      - "v*.*.*" # Trigger f端r Tags wie v1.0.0
  pull_request:
    branches: [ "master" ]
  release:
    types: [ "published" ] 
    
jobs:
  build:
    strategy:
      matrix:
        plattform: [windows, ubuntu]
    runs-on: ${{ matrix.plattform }}-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
    - uses: dotnet/nbgv@master
      id: nbgv
      with:
        setAllVars: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration release
    # - name: Test
    #   run: dotnet test --no-build --verbosity normal
    - name: dotnet publish
    
      run: dotnet publish KepwareSync.Service/Kepware.SyncService.csproj --configuration release -o publish /p:UseAppHost=true
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.nbgv.outputs.SemVer2 }}-${{ matrix.plattform }}
        path: publish
    
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') # Sicherstellen, dass der Job nur f端r Tags ausgef端hrt wird
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Herunterladen von Artefakten f端r jede Plattform
    - name: Download Windows Artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build.outputs.nbgv }}-windows
        path: artifacts/windows
    - name: Download Linux Artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build.outputs.nbgv }}-ubuntu
        path: artifacts/linux

    # Changelog generieren
    - name: Generate Changelog
      id: changelog
      run: |
        nbgv cloud --releaseNotes > changelog.md
      env:
        NBGV_Version: ${{ needs.build.outputs.nbgv }}

    # Release erstellen
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.build.outputs.nbgv }}
        release_name: Release ${{ needs.build.outputs.nbgv }}
        body: ${{ steps.changelog.outputs }}
        draft: false
        prerelease: false

    # Artefakte hochladen
    - name: Upload Windows Artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/windows
        asset_name: ${{ needs.build.outputs.nbgv }}-windows.zip
        asset_content_type: application/zip

    - name: Upload Linux Artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/linux
        asset_name: ${{ needs.build.outputs.nbgv }}-ubuntu.zip
        asset_content_type: application/zip
