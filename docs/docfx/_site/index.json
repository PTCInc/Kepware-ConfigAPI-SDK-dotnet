{
  "api/Kepware.Api.IKepwareDefaultValueProvider.html": {
    "href": "api/Kepware.Api.IKepwareDefaultValueProvider.html",
    "title": "Interface IKepwareDefaultValueProvider | Kepware Configuration API .NET SDK Documentation",
    "summary": "Interface IKepwareDefaultValueProvider Namespace Kepware.Api Assembly Kepware.Api.dll public interface IKepwareDefaultValueProvider Methods GetDefaultValuesAsync(string, string, CancellationToken) Task<ReadOnlyDictionary<string, JsonElement>> GetDefaultValuesAsync(string driverName, string entityName, CancellationToken cancellationToken = default) Parameters driverName string entityName string cancellationToken CancellationToken Returns Task<ReadOnlyDictionary<string, JsonElement>>"
  },
  "api/Kepware.Api.KepwareApiClient.html": {
    "href": "api/Kepware.Api.KepwareApiClient.html",
    "title": "Class KepwareApiClient | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class KepwareApiClient Namespace Kepware.Api Assembly Kepware.Api.dll Client for interacting with the Kepware server. public class KepwareApiClient : IKepwareDefaultValueProvider Inheritance object KepwareApiClient Implements IKepwareDefaultValueProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods KepwareApiClientExtentions.CreateChannelAsync(KepwareApiClient, string, string, IDictionary<string, object>?, CancellationToken) KepwareApiClientExtentions.CreateDeviceAsync(KepwareApiClient, Channel, string, string?, IDictionary<string, object>?, CancellationToken) KepwareApiClientExtentions.GetOrCreateChannelAsync(KepwareApiClient, string, string, IDictionary<string, object>?, CancellationToken) KepwareApiClientExtentions.GetOrCreateDeviceAsync(KepwareApiClient, Channel, string, string?, IDictionary<string, object>?, CancellationToken) Constructors KepwareApiClient(KepwareApiClientOptions, ILogger<KepwareApiClient>, HttpClient) Initializes a new instance of the KepwareApiClient class. public KepwareApiClient(KepwareApiClientOptions options, ILogger<KepwareApiClient> logger, HttpClient httpClient) Parameters options KepwareApiClientOptions The client options. logger ILogger<KepwareApiClient> The logger instance. httpClient HttpClient The HTTP client instance. Fields UNKNOWN The value for an unknown client or host name. public const string UNKNOWN = \"Unknown\" Field Value string Properties ClientHostName Gets the host name of the client. public string ClientHostName { get; } Property Value string ClientName Gets the name of the client. public string ClientName { get; } Property Value string ClientOptions public KepwareApiClientOptions ClientOptions { get; init; } Property Value KepwareApiClientOptions Methods CompareAndApply(Project, Project, CancellationToken) Compares the source project with the project from the API and applies the changes to the API. public Task<(int inserts, int updates, int deletes)> CompareAndApply(Project sourceProject, Project projectFromApi, CancellationToken cancellationToken = default) Parameters sourceProject Project projectFromApi Project cancellationToken CancellationToken Returns Task<(int inserts, int updates, int deletes)> CompareAndApply(Project, CancellationToken) Compares the source project with the project from the API and applies the changes to the API. public Task<(int inserts, int updates, int deletes)> CompareAndApply(Project sourceProject, CancellationToken cancellationToken = default) Parameters sourceProject Project cancellationToken CancellationToken Returns Task<(int inserts, int updates, int deletes)> CompareAndApply<T, K>(T?, T?, NamedEntity?, CancellationToken) Compares two collections of entities and applies the changes to the target collection. Left should represent the source and Right should represent the API (target). public Task<EntityCompare.CollectionResultBucket<K>> CompareAndApply<T, K>(T? sourceCollection, T? apiCollection, NamedEntity? owner = null, CancellationToken cancellationToken = default) where T : EntityCollection<K> where K : NamedEntity, new() Parameters sourceCollection T The source collection. apiCollection T The collection representing the current state of the API owner NamedEntity The owner of the entities. cancellationToken CancellationToken The cancellation token. Returns Task<EntityCompare.CollectionResultBucket<K>> A task that represents the asynchronous operation. The task result contains the comparison result. Type Parameters T The type of the entity collection. K The type of the entity. DeleteItemAsync<T>(T, CancellationToken) Deletes an item from the Kepware server. public Task<bool> DeleteItemAsync<T>(T item, CancellationToken cancellationToken = default) where T : NamedEntity, new() Parameters item T cancellationToken CancellationToken Returns Task<bool> Type Parameters T DeleteItemAsync<T, K>(K, NamedEntity?, CancellationToken) Deletes an item from the Kepware server. public Task DeleteItemAsync<T, K>(K item, NamedEntity? owner = null, CancellationToken cancellationToken = default) where T : EntityCollection<K> where K : NamedEntity, new() Parameters item K owner NamedEntity cancellationToken CancellationToken Returns Task Type Parameters T K DeleteItemsAsync<T, K>(List<K>, NamedEntity?, CancellationToken) Deletes a list of items from the Kepware server. public Task DeleteItemsAsync<T, K>(List<K> items, NamedEntity? owner = null, CancellationToken cancellationToken = default) where T : EntityCollection<K> where K : NamedEntity, new() Parameters items List<K> owner NamedEntity cancellationToken CancellationToken Returns Task Type Parameters T K DeserializeJsonArrayAsync<K>(HttpResponseMessage, CancellationToken) protected Task<List<K>?> DeserializeJsonArrayAsync<K>(HttpResponseMessage httpResponse, CancellationToken cancellationToken = default) where K : BaseEntity, new() Parameters httpResponse HttpResponseMessage cancellationToken CancellationToken Returns Task<List<K>> Type Parameters K DeserializeJsonAsync<K>(HttpResponseMessage, JsonTypeInfo<K>, CancellationToken) protected Task<K?> DeserializeJsonAsync<K>(HttpResponseMessage httpResponse, JsonTypeInfo<K> jsonTypeInfo, CancellationToken cancellationToken = default) Parameters httpResponse HttpResponseMessage jsonTypeInfo JsonTypeInfo<K> cancellationToken CancellationToken Returns Task<K> Type Parameters K DeserializeJsonAsync<K>(HttpResponseMessage, CancellationToken) protected Task<K?> DeserializeJsonAsync<K>(HttpResponseMessage httpResponse, CancellationToken cancellationToken = default) where K : BaseEntity, new() Parameters httpResponse HttpResponseMessage cancellationToken CancellationToken Returns Task<K> Type Parameters K GetChannelPropertiesAsync(Driver, CancellationToken) public Task<Docs.Channel> GetChannelPropertiesAsync(Docs.Driver driver, CancellationToken cancellationToken = default) Parameters driver Docs.Driver cancellationToken CancellationToken Returns Task<Docs.Channel> GetChannelPropertiesAsync(string, CancellationToken) public Task<Docs.Channel> GetChannelPropertiesAsync(string driverName, CancellationToken cancellationToken = default) Parameters driverName string cancellationToken CancellationToken Returns Task<Docs.Channel> GetDevicePropertiesAsync(Driver, CancellationToken) public Task<Docs.Device> GetDevicePropertiesAsync(Docs.Driver driver, CancellationToken cancellationToken = default) Parameters driver Docs.Driver cancellationToken CancellationToken Returns Task<Docs.Device> GetDevicePropertiesAsync(string, CancellationToken) public Task<Docs.Device> GetDevicePropertiesAsync(string driverName, CancellationToken cancellationToken = default) Parameters driverName string cancellationToken CancellationToken Returns Task<Docs.Device> GetProductInfoAsync(CancellationToken) Gets the product information from the Kepware server. public Task<ProductInfo?> GetProductInfoAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken The cancellation token. Returns Task<ProductInfo> A task that represents the asynchronous operation. The task result contains the product information. InsertItemAsync<T, K>(K, NamedEntity?, CancellationToken) Inserts an item in the Kepware server. public Task<bool> InsertItemAsync<T, K>(K item, NamedEntity? owner = null, CancellationToken cancellationToken = default) where T : EntityCollection<K> where K : NamedEntity, new() Parameters item K owner NamedEntity cancellationToken CancellationToken Returns Task<bool> Type Parameters T K InsertItemsAsync<T, K>(List<K>, int, NamedEntity?, CancellationToken) Inserts a list of items in the Kepware server. public Task<bool[]> InsertItemsAsync<T, K>(List<K> items, int pageSize = 10, NamedEntity? owner = null, CancellationToken cancellationToken = default) where T : EntityCollection<K> where K : NamedEntity, new() Parameters items List<K> pageSize int owner NamedEntity cancellationToken CancellationToken Returns Task<bool[]> Type Parameters T K LoadChannelPropertiesAsync(string, CancellationToken) protected virtual Task<Docs.Channel> LoadChannelPropertiesAsync(string driverName, CancellationToken cancellationToken) Parameters driverName string cancellationToken CancellationToken Returns Task<Docs.Channel> LoadCollectionAsync<T>(NamedEntity, CancellationToken) public Task<T?> LoadCollectionAsync<T>(NamedEntity owner, CancellationToken cancellationToken = default) where T : EntityCollection<DefaultEntity>, new() Parameters owner NamedEntity cancellationToken CancellationToken Returns Task<T> Type Parameters T LoadCollectionAsync<T>(string?, CancellationToken) public Task<T?> LoadCollectionAsync<T>(string? owner = null, CancellationToken cancellationToken = default) where T : EntityCollection<DefaultEntity>, new() Parameters owner string cancellationToken CancellationToken Returns Task<T> Type Parameters T LoadCollectionAsync<T, K>(NamedEntity, CancellationToken) public Task<T?> LoadCollectionAsync<T, K>(NamedEntity owner, CancellationToken cancellationToken = default) where T : EntityCollection<K>, new() where K : BaseEntity, new() Parameters owner NamedEntity cancellationToken CancellationToken Returns Task<T> Type Parameters T K LoadCollectionAsync<T, K>(IEnumerable<string>, CancellationToken) public Task<T?> LoadCollectionAsync<T, K>(IEnumerable<string> owner, CancellationToken cancellationToken = default) where T : EntityCollection<K>, new() where K : BaseEntity, new() Parameters owner IEnumerable<string> cancellationToken CancellationToken Returns Task<T> Type Parameters T K LoadCollectionAsync<T, K>(string?, CancellationToken) public Task<T?> LoadCollectionAsync<T, K>(string? owner = null, CancellationToken cancellationToken = default) where T : EntityCollection<K>, new() where K : BaseEntity, new() Parameters owner string cancellationToken CancellationToken Returns Task<T> Type Parameters T K LoadDevicePropertiesAsync(string, CancellationToken) protected virtual Task<Docs.Device> LoadDevicePropertiesAsync(string driverName, CancellationToken cancellationToken) Parameters driverName string cancellationToken CancellationToken Returns Task<Docs.Device> LoadEntityAsync<T>(IEnumerable<string>, CancellationToken) public Task<T?> LoadEntityAsync<T>(IEnumerable<string> owner, CancellationToken cancellationToken = default) where T : BaseEntity, new() Parameters owner IEnumerable<string> cancellationToken CancellationToken Returns Task<T> Type Parameters T LoadEntityAsync<T>(string, NamedEntity, CancellationToken) public Task<T?> LoadEntityAsync<T>(string name, NamedEntity owner, CancellationToken cancellationToken = default) where T : BaseEntity, new() Parameters name string owner NamedEntity cancellationToken CancellationToken Returns Task<T> Type Parameters T LoadEntityAsync<T>(string?, CancellationToken) public Task<T?> LoadEntityAsync<T>(string? name = null, CancellationToken cancellationToken = default) where T : BaseEntity, new() Parameters name string cancellationToken CancellationToken Returns Task<T> Type Parameters T LoadProject(bool, CancellationToken) Loads the project from the Kepware server. public Task<Project> LoadProject(bool blnLoadFullProject = false, CancellationToken cancellationToken = default) Parameters blnLoadFullProject bool cancellationToken CancellationToken Returns Task<Project> LoadSupportedDriversAsync(CancellationToken) protected virtual Task<List<Docs.Driver>> LoadSupportedDriversAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<Docs.Driver>> SupportedDriversAsync(CancellationToken) public Task<ReadOnlyDictionary<string, Docs.Driver>> SupportedDriversAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<ReadOnlyDictionary<string, Docs.Driver>> TestConnectionAsync(CancellationToken) Tests the connection to the Kepware server. public Task<bool> TestConnectionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken The cancellation token. Returns Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating whether the connection was successful. UpdateItemAsync<T>(T, T?, CancellationToken) Updates an item in the Kepware server. public Task<bool> UpdateItemAsync<T>(T item, T? oldItem = null, CancellationToken cancellationToken = default) where T : NamedEntity, new() Parameters item T The item to update. oldItem T The old item. cancellationToken CancellationToken The cancellation token. Returns Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating whether the update was successful. Type Parameters T The type of the item. UpdateItemAsync<T, K>(K, K?, NamedEntity?, CancellationToken) Updates an item in the Kepware server. public Task UpdateItemAsync<T, K>(K item, K? oldItem = null, NamedEntity? owner = null, CancellationToken cancellationToken = default) where T : EntityCollection<K> where K : NamedEntity, new() Parameters item K The item to update. oldItem K The old item. owner NamedEntity The owner of the entities. cancellationToken CancellationToken The cancellation token. Returns Task A task that represents the asynchronous operation. Type Parameters T The type of the entity collection. K The type of the item. UpdateItemsAsync<T, K>(List<(K item, K? oldItem)>, NamedEntity?, CancellationToken) Updates a list of items in the Kepware server. public Task UpdateItemsAsync<T, K>(List<(K item, K? oldItem)> items, NamedEntity? owner = null, CancellationToken cancellationToken = default) where T : EntityCollection<K> where K : NamedEntity, new() Parameters items List<(K item, K oldItem)> owner NamedEntity cancellationToken CancellationToken Returns Task Type Parameters T K"
  },
  "api/Kepware.Api.KepwareApiClientExtentions.html": {
    "href": "api/Kepware.Api.KepwareApiClientExtentions.html",
    "title": "Class KepwareApiClientExtentions | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class KepwareApiClientExtentions Namespace Kepware.Api Assembly Kepware.Api.dll public static class KepwareApiClientExtentions Inheritance object KepwareApiClientExtentions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateChannelAsync(KepwareApiClient, string, string, IDictionary<string, object>?, CancellationToken) public static Task<Channel?> CreateChannelAsync(this KepwareApiClient apiClient, string name, string driverName, IDictionary<string, object>? properties = null, CancellationToken cancellationToken = default) Parameters apiClient KepwareApiClient name string driverName string properties IDictionary<string, object> cancellationToken CancellationToken Returns Task<Channel> CreateDeviceAsync(KepwareApiClient, Channel, string, string?, IDictionary<string, object>?, CancellationToken) public static Task<Device?> CreateDeviceAsync(this KepwareApiClient apiClient, Channel channel, string name, string? driverName = null, IDictionary<string, object>? properties = null, CancellationToken cancellationToken = default) Parameters apiClient KepwareApiClient channel Channel name string driverName string properties IDictionary<string, object> cancellationToken CancellationToken Returns Task<Device> GetOrCreateChannelAsync(KepwareApiClient, string, string, IDictionary<string, object>?, CancellationToken) public static Task<Channel> GetOrCreateChannelAsync(this KepwareApiClient apiClient, string name, string driverName, IDictionary<string, object>? properties = null, CancellationToken cancellationToken = default) Parameters apiClient KepwareApiClient name string driverName string properties IDictionary<string, object> cancellationToken CancellationToken Returns Task<Channel> GetOrCreateDeviceAsync(KepwareApiClient, Channel, string, string?, IDictionary<string, object>?, CancellationToken) public static Task<Device> GetOrCreateDeviceAsync(this KepwareApiClient apiClient, Channel channel, string name, string? driverName = null, IDictionary<string, object>? properties = null, CancellationToken cancellationToken = default) Parameters apiClient KepwareApiClient channel Channel name string driverName string properties IDictionary<string, object> cancellationToken CancellationToken Returns Task<Device>"
  },
  "api/Kepware.Api.KepwareApiClientOptions.html": {
    "href": "api/Kepware.Api.KepwareApiClientOptions.html",
    "title": "Class KepwareApiClientOptions | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class KepwareApiClientOptions Namespace Kepware.Api Assembly Kepware.Api.dll public class KepwareApiClientOptions Inheritance object KepwareApiClientOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConfigureClient public Action<HttpClient>? ConfigureClient { get; init; } Property Value Action<HttpClient> ConfigureClientBuilder public Action<IHttpClientBuilder>? ConfigureClientBuilder { get; init; } Property Value Action<IHttpClientBuilder> DisableCertifcateValidation public bool DisableCertifcateValidation { get; init; } Property Value bool HostUri public required Uri HostUri { get; init; } Property Value Uri Password public string? Password { get; init; } Property Value string Tag public object? Tag { get; init; } Property Value object Timeout public TimeSpan Timeout { get; init; } Property Value TimeSpan Username public string? Username { get; init; } Property Value string"
  },
  "api/Kepware.Api.KepwareApiServiceCollectionExtensions.html": {
    "href": "api/Kepware.Api.KepwareApiServiceCollectionExtensions.html",
    "title": "Class KepwareApiServiceCollectionExtensions | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class KepwareApiServiceCollectionExtensions Namespace Kepware.Api Assembly Kepware.Api.dll public static class KepwareApiServiceCollectionExtensions Inheritance object KepwareApiServiceCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddKepwareApiClient(IServiceCollection, string, KepwareApiClientOptions) public static IServiceCollection AddKepwareApiClient(this IServiceCollection services, string name, KepwareApiClientOptions options) Parameters services IServiceCollection name string options KepwareApiClientOptions Returns IServiceCollection AddKepwareApiClient(IServiceCollection, string, string, string, string, int, bool, Action<HttpClient>?, Action<IHttpClientBuilder>?) public static IServiceCollection AddKepwareApiClient(this IServiceCollection services, string name, string baseUrl, string apiUserName, string apiPassword, int timeoutInSeconds = 60, bool disableCertificateValidation = false, Action<HttpClient>? configureClient = null, Action<IHttpClientBuilder>? configureHttpClientBuilder = null) Parameters services IServiceCollection name string baseUrl string apiUserName string apiPassword string timeoutInSeconds int disableCertificateValidation bool configureClient Action<HttpClient> configureHttpClientBuilder Action<IHttpClientBuilder> Returns IServiceCollection AddKepwareApiClients(IServiceCollection, IEnumerable<KeyValuePair<string, KepwareApiClientOptions>>) public static IServiceCollection AddKepwareApiClients(this IServiceCollection services, IEnumerable<KeyValuePair<string, KepwareApiClientOptions>> options) Parameters services IServiceCollection options IEnumerable<KeyValuePair<string, KepwareApiClientOptions>> Returns IServiceCollection"
  },
  "api/Kepware.Api.Model.ApiResult.html": {
    "href": "api/Kepware.Api.Model.ApiResult.html",
    "title": "Class ApiResult | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class ApiResult Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the result of an API call. public class ApiResult Inheritance object ApiResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Code Gets or sets the status code of the API result. [JsonPropertyName(\"code\")] public int Code { get; set; } Property Value int HttpStatusCode Gets the HTTP status code corresponding to the API result code. [JsonIgnore] public HttpStatusCode HttpStatusCode { get; } Property Value HttpStatusCode IsSuccessStatusCode Gets a value indicating whether the status code is in the range 200-299. [JsonIgnore] public bool IsSuccessStatusCode { get; } Property Value bool Message Gets or sets the message of the API result. [JsonPropertyName(\"message\")] public string Message { get; set; } Property Value string"
  },
  "api/Kepware.Api.Model.ApiStatus.html": {
    "href": "api/Kepware.Api.Model.ApiStatus.html",
    "title": "Class ApiStatus | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class ApiStatus Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the status of the Configuration API REST service. public class ApiStatus Inheritance object ApiStatus Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Healthy Gets or sets a value indicating whether the service is running. public bool Healthy { get; set; } Property Value bool Name Gets or sets the name of the server being checked. public string Name { get; set; } Property Value string"
  },
  "api/Kepware.Api.Model.BaseEntity.html": {
    "href": "api/Kepware.Api.Model.BaseEntity.html",
    "title": "Class BaseEntity | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class BaseEntity Namespace Kepware.Api.Model Assembly Kepware.Api.dll Abstract base class for all entities in the Kepware API. public abstract class BaseEntity : IEquatable<BaseEntity> Inheritance object BaseEntity Implements IEquatable<BaseEntity> Derived DefaultEntity Project Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description The description of the entity. [JsonPropertyName(\"common.ALLTYPES_DESCRIPTION\")] [YamlMember(Alias = \"common.ALLTYPES_DESCRIPTION\")] public string? Description { get; set; } Property Value string DynamicProperties Dynamic properties associated with the entity. [JsonExtensionData] public Dictionary<string, JsonElement> DynamicProperties { get; set; } Property Value Dictionary<string, JsonElement> Hash Unique hash representing the current state of the entity. [JsonIgnore] [YamlIgnore] public ulong Hash { get; } Property Value ulong ProjectId The project ID the entity belongs to. [JsonPropertyName(\"PROJECT_ID\")] [YamlIgnore] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public long? ProjectId { get; set; } Property Value long? TypeName The type name of the entity. [JsonIgnore] [YamlIgnore] public string TypeName { get; } Property Value string Methods AppendHashSources(HashSourceBuilder) Appends additional hash sources for derived classes. protected virtual CustomHashGenerator.HashSourceBuilder AppendHashSources(CustomHashGenerator.HashSourceBuilder builder) Parameters builder CustomHashGenerator.HashSourceBuilder The hash source builder. Returns CustomHashGenerator.HashSourceBuilder The updated hash source builder. CalculateHash() Calculates the hash for the entity. protected virtual ulong CalculateHash() Returns ulong The calculated hash. Cleanup(IKepwareDefaultValueProvider, bool, CancellationToken) Cleans up the entity by removing unnecessary properties and standardizing its state. public virtual Task Cleanup(IKepwareDefaultValueProvider defaultValueProvider, bool blnRemoveProjectId = false, CancellationToken cancellationToken = default) Parameters defaultValueProvider IKepwareDefaultValueProvider Provider for default values. blnRemoveProjectId bool Whether to remove the project ID. cancellationToken CancellationToken A token to cancel the operation. Returns Task ConditionalNonSerialized() Retrieves the conditional non-serialized properties for the entity. protected virtual ISet<string>? ConditionalNonSerialized() Returns ISet<string> Equals(BaseEntity?) Compares the current entity with another for equality. public virtual bool Equals(BaseEntity? other) Parameters other BaseEntity The other entity to compare with. Returns bool True if the entities are equal, false otherwise. GetDynamicProperty<T>(string) Retrieves a dynamic property by key. public T? GetDynamicProperty<T>(string key) Parameters key string The key of the property. Returns T The value of the property, or default if not found. Type Parameters T The type of the property. SetDynamicProperty<T>(string, T) Sets a dynamic property for the entity. public BaseEntity SetDynamicProperty<T>(string key, T value) Parameters key string The key of the property. value T The value of the property. Returns BaseEntity The current instance for chaining. Type Parameters T The type of the property. TryGetGetDynamicProperty<T>(string, out T?) Attempts to retrieve a dynamic property by key. public bool TryGetGetDynamicProperty<T>(string key, out T? value) Parameters key string The key of the property. value T The retrieved value, or null if not found. Returns bool True if the property exists, false otherwise. Type Parameters T The type of the property."
  },
  "api/Kepware.Api.Model.Channel.html": {
    "href": "api/Kepware.Api.Model.Channel.html",
    "title": "Class Channel | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class Channel Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents a channel in the project [Endpoint(\"/config/v1/project/channels/{name}\", null)] public class Channel : NamedUidEntity, IEquatable<BaseEntity>, IHaveOwner, IHaveName Inheritance object BaseEntity DefaultEntity NamedEntity NamedUidEntity Channel Implements IEquatable<BaseEntity> IHaveOwner IHaveName Inherited Members NamedUidEntity.UniqueId NamedUidEntity.RemoveUniqueId() NamedEntity.Name NamedEntity.AppendHashSources(CustomHashGenerator.HashSourceBuilder) NamedEntity.GetUpdateDiff(NamedEntity, bool) DefaultEntity.Owner BaseEntity.Hash BaseEntity.ProjectId BaseEntity.Description BaseEntity.TypeName BaseEntity.DynamicProperties BaseEntity.Equals(BaseEntity) BaseEntity.GetDynamicProperty<T>(string) BaseEntity.SetDynamicProperty<T>(string, T) BaseEntity.TryGetGetDynamicProperty<T>(string, out T) BaseEntity.CalculateHash() BaseEntity.ConditionalNonSerialized() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods HelperExtentions.Flatten(NamedEntity?) HelperExtentions.Flatten(NamedEntity?, Type) Constructors Channel() public Channel() Channel(string) public Channel(string name) Parameters name string Properties Devices Gets or sets the devices in the channel [YamlIgnore] [JsonPropertyName(\"devices\")] [JsonPropertyOrder(100)] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public DeviceCollection? Devices { get; set; } Property Value DeviceCollection UniqueIdKey Get the unique id key protected override string UniqueIdKey { get; } Property Value string Methods Cleanup(IKepwareDefaultValueProvider, bool, CancellationToken) Recursively cleans up the channel and all devices public override Task Cleanup(IKepwareDefaultValueProvider defaultValueProvider, bool blnRemoveProjectId = false, CancellationToken cancellationToken = default) Parameters defaultValueProvider IKepwareDefaultValueProvider blnRemoveProjectId bool cancellationToken CancellationToken Returns Task"
  },
  "api/Kepware.Api.Model.ChannelCollection.html": {
    "href": "api/Kepware.Api.Model.ChannelCollection.html",
    "title": "Class ChannelCollection | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class ChannelCollection Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the collection of channels in a project [Endpoint(\"/config/v1/project/channels\", null)] public class ChannelCollection : EntityCollection<Channel>, IList<Channel>, ICollection<Channel>, IReadOnlyList<Channel>, IReadOnlyCollection<Channel>, IEnumerable<Channel>, IList, ICollection, IEnumerable, IHaveOwner Inheritance object List<Channel> EntityCollection<Channel> ChannelCollection Implements IList<Channel> ICollection<Channel> IReadOnlyList<Channel> IReadOnlyCollection<Channel> IEnumerable<Channel> IList ICollection IEnumerable IHaveOwner Inherited Members EntityCollection<Channel>.Owner List<Channel>.Add(Channel) List<Channel>.AddRange(IEnumerable<Channel>) List<Channel>.AsReadOnly() List<Channel>.BinarySearch(int, int, Channel, IComparer<Channel>) List<Channel>.BinarySearch(Channel) List<Channel>.BinarySearch(Channel, IComparer<Channel>) List<Channel>.Clear() List<Channel>.Contains(Channel) List<Channel>.ConvertAll<TOutput>(Converter<Channel, TOutput>) List<Channel>.CopyTo(int, Channel[], int, int) List<Channel>.CopyTo(Channel[]) List<Channel>.CopyTo(Channel[], int) List<Channel>.EnsureCapacity(int) List<Channel>.Exists(Predicate<Channel>) List<Channel>.Find(Predicate<Channel>) List<Channel>.FindAll(Predicate<Channel>) List<Channel>.FindIndex(int, int, Predicate<Channel>) List<Channel>.FindIndex(int, Predicate<Channel>) List<Channel>.FindIndex(Predicate<Channel>) List<Channel>.FindLast(Predicate<Channel>) List<Channel>.FindLastIndex(int, int, Predicate<Channel>) List<Channel>.FindLastIndex(int, Predicate<Channel>) List<Channel>.FindLastIndex(Predicate<Channel>) List<Channel>.ForEach(Action<Channel>) List<Channel>.GetEnumerator() List<Channel>.GetRange(int, int) List<Channel>.IndexOf(Channel) List<Channel>.IndexOf(Channel, int) List<Channel>.IndexOf(Channel, int, int) List<Channel>.Insert(int, Channel) List<Channel>.InsertRange(int, IEnumerable<Channel>) List<Channel>.LastIndexOf(Channel) List<Channel>.LastIndexOf(Channel, int) List<Channel>.LastIndexOf(Channel, int, int) List<Channel>.Remove(Channel) List<Channel>.RemoveAll(Predicate<Channel>) List<Channel>.RemoveAt(int) List<Channel>.RemoveRange(int, int) List<Channel>.Reverse() List<Channel>.Reverse(int, int) List<Channel>.Slice(int, int) List<Channel>.Sort() List<Channel>.Sort(IComparer<Channel>) List<Channel>.Sort(Comparison<Channel>) List<Channel>.Sort(int, int, IComparer<Channel>) List<Channel>.ToArray() List<Channel>.TrimExcess() List<Channel>.TrueForAll(Predicate<Channel>) List<Channel>.Capacity List<Channel>.Count List<Channel>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChannelCollection() Initializes a new instance of the ChannelCollection class. public ChannelCollection()"
  },
  "api/Kepware.Api.Model.ConsumerExchangeCollection.html": {
    "href": "api/Kepware.Api.Model.ConsumerExchangeCollection.html",
    "title": "Class ConsumerExchangeCollection | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class ConsumerExchangeCollection Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the collection of consumer exchanges in a consumer exchange group [Endpoint(\"/config/v1/project/channels/{channelName}/devices/{deviceName}/consumer_exchange_groups/{groupName}/consumer_exchanges\", null)] public class ConsumerExchangeCollection : EntityCollection<DefaultEntity>, IList<DefaultEntity>, ICollection<DefaultEntity>, IReadOnlyList<DefaultEntity>, IReadOnlyCollection<DefaultEntity>, IEnumerable<DefaultEntity>, IList, ICollection, IEnumerable, IHaveOwner Inheritance object List<DefaultEntity> EntityCollection<DefaultEntity> ConsumerExchangeCollection Implements IList<DefaultEntity> ICollection<DefaultEntity> IReadOnlyList<DefaultEntity> IReadOnlyCollection<DefaultEntity> IEnumerable<DefaultEntity> IList ICollection IEnumerable IHaveOwner Inherited Members EntityCollection<DefaultEntity>.Owner List<DefaultEntity>.Add(DefaultEntity) List<DefaultEntity>.AddRange(IEnumerable<DefaultEntity>) List<DefaultEntity>.AsReadOnly() List<DefaultEntity>.BinarySearch(int, int, DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.BinarySearch(DefaultEntity) List<DefaultEntity>.BinarySearch(DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.Clear() List<DefaultEntity>.Contains(DefaultEntity) List<DefaultEntity>.ConvertAll<TOutput>(Converter<DefaultEntity, TOutput>) List<DefaultEntity>.CopyTo(int, DefaultEntity[], int, int) List<DefaultEntity>.CopyTo(DefaultEntity[]) List<DefaultEntity>.CopyTo(DefaultEntity[], int) List<DefaultEntity>.EnsureCapacity(int) List<DefaultEntity>.Exists(Predicate<DefaultEntity>) List<DefaultEntity>.Find(Predicate<DefaultEntity>) List<DefaultEntity>.FindAll(Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(Predicate<DefaultEntity>) List<DefaultEntity>.FindLast(Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(Predicate<DefaultEntity>) List<DefaultEntity>.ForEach(Action<DefaultEntity>) List<DefaultEntity>.GetEnumerator() List<DefaultEntity>.GetRange(int, int) List<DefaultEntity>.IndexOf(DefaultEntity) List<DefaultEntity>.IndexOf(DefaultEntity, int) List<DefaultEntity>.IndexOf(DefaultEntity, int, int) List<DefaultEntity>.Insert(int, DefaultEntity) List<DefaultEntity>.InsertRange(int, IEnumerable<DefaultEntity>) List<DefaultEntity>.LastIndexOf(DefaultEntity) List<DefaultEntity>.LastIndexOf(DefaultEntity, int) List<DefaultEntity>.LastIndexOf(DefaultEntity, int, int) List<DefaultEntity>.Remove(DefaultEntity) List<DefaultEntity>.RemoveAll(Predicate<DefaultEntity>) List<DefaultEntity>.RemoveAt(int) List<DefaultEntity>.RemoveRange(int, int) List<DefaultEntity>.Reverse() List<DefaultEntity>.Reverse(int, int) List<DefaultEntity>.Slice(int, int) List<DefaultEntity>.Sort() List<DefaultEntity>.Sort(IComparer<DefaultEntity>) List<DefaultEntity>.Sort(Comparison<DefaultEntity>) List<DefaultEntity>.Sort(int, int, IComparer<DefaultEntity>) List<DefaultEntity>.ToArray() List<DefaultEntity>.TrimExcess() List<DefaultEntity>.TrueForAll(Predicate<DefaultEntity>) List<DefaultEntity>.Capacity List<DefaultEntity>.Count List<DefaultEntity>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConsumerExchangeCollection() Initializes a new instance of the ConsumerExchangeCollection class. public ConsumerExchangeCollection()"
  },
  "api/Kepware.Api.Model.ConsumerExchangeGroupCollection.html": {
    "href": "api/Kepware.Api.Model.ConsumerExchangeGroupCollection.html",
    "title": "Class ConsumerExchangeGroupCollection | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class ConsumerExchangeGroupCollection Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the collection of consumer exchange groups in a device [Endpoint(\"/config/v1/project/channels/{channelName}/devices/{deviceName}/consumer_exchange_groups\", null)] public class ConsumerExchangeGroupCollection : EntityCollection<DefaultEntity>, IList<DefaultEntity>, ICollection<DefaultEntity>, IReadOnlyList<DefaultEntity>, IReadOnlyCollection<DefaultEntity>, IEnumerable<DefaultEntity>, IList, ICollection, IEnumerable, IHaveOwner Inheritance object List<DefaultEntity> EntityCollection<DefaultEntity> ConsumerExchangeGroupCollection Implements IList<DefaultEntity> ICollection<DefaultEntity> IReadOnlyList<DefaultEntity> IReadOnlyCollection<DefaultEntity> IEnumerable<DefaultEntity> IList ICollection IEnumerable IHaveOwner Inherited Members EntityCollection<DefaultEntity>.Owner List<DefaultEntity>.Add(DefaultEntity) List<DefaultEntity>.AddRange(IEnumerable<DefaultEntity>) List<DefaultEntity>.AsReadOnly() List<DefaultEntity>.BinarySearch(int, int, DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.BinarySearch(DefaultEntity) List<DefaultEntity>.BinarySearch(DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.Clear() List<DefaultEntity>.Contains(DefaultEntity) List<DefaultEntity>.ConvertAll<TOutput>(Converter<DefaultEntity, TOutput>) List<DefaultEntity>.CopyTo(int, DefaultEntity[], int, int) List<DefaultEntity>.CopyTo(DefaultEntity[]) List<DefaultEntity>.CopyTo(DefaultEntity[], int) List<DefaultEntity>.EnsureCapacity(int) List<DefaultEntity>.Exists(Predicate<DefaultEntity>) List<DefaultEntity>.Find(Predicate<DefaultEntity>) List<DefaultEntity>.FindAll(Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(Predicate<DefaultEntity>) List<DefaultEntity>.FindLast(Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(Predicate<DefaultEntity>) List<DefaultEntity>.ForEach(Action<DefaultEntity>) List<DefaultEntity>.GetEnumerator() List<DefaultEntity>.GetRange(int, int) List<DefaultEntity>.IndexOf(DefaultEntity) List<DefaultEntity>.IndexOf(DefaultEntity, int) List<DefaultEntity>.IndexOf(DefaultEntity, int, int) List<DefaultEntity>.Insert(int, DefaultEntity) List<DefaultEntity>.InsertRange(int, IEnumerable<DefaultEntity>) List<DefaultEntity>.LastIndexOf(DefaultEntity) List<DefaultEntity>.LastIndexOf(DefaultEntity, int) List<DefaultEntity>.LastIndexOf(DefaultEntity, int, int) List<DefaultEntity>.Remove(DefaultEntity) List<DefaultEntity>.RemoveAll(Predicate<DefaultEntity>) List<DefaultEntity>.RemoveAt(int) List<DefaultEntity>.RemoveRange(int, int) List<DefaultEntity>.Reverse() List<DefaultEntity>.Reverse(int, int) List<DefaultEntity>.Slice(int, int) List<DefaultEntity>.Sort() List<DefaultEntity>.Sort(IComparer<DefaultEntity>) List<DefaultEntity>.Sort(Comparison<DefaultEntity>) List<DefaultEntity>.Sort(int, int, IComparer<DefaultEntity>) List<DefaultEntity>.ToArray() List<DefaultEntity>.TrimExcess() List<DefaultEntity>.TrueForAll(Predicate<DefaultEntity>) List<DefaultEntity>.Capacity List<DefaultEntity>.Count List<DefaultEntity>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConsumerExchangeGroupCollection() Initializes a new instance of the ConsumerExchangeGroupCollection class. public ConsumerExchangeGroupCollection()"
  },
  "api/Kepware.Api.Model.DataTypeEnumConverterProvider.html": {
    "href": "api/Kepware.Api.Model.DataTypeEnumConverterProvider.html",
    "title": "Class DataTypeEnumConverterProvider | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class DataTypeEnumConverterProvider Namespace Kepware.Api.Model Assembly Kepware.Api.dll public class DataTypeEnumConverterProvider Inheritance object DataTypeEnumConverterProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DataTypeEnumConverterProvider() public DataTypeEnumConverterProvider() Methods GetDataTypeEnumConverter(string?) public IDataTypeEnumConverter GetDataTypeEnumConverter(string? drivename) Parameters drivename string Returns IDataTypeEnumConverter"
  },
  "api/Kepware.Api.Model.DefaultEntity.html": {
    "href": "api/Kepware.Api.Model.DefaultEntity.html",
    "title": "Class DefaultEntity | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class DefaultEntity Namespace Kepware.Api.Model Assembly Kepware.Api.dll A default entity with an optional owner. public class DefaultEntity : BaseEntity, IEquatable<BaseEntity>, IHaveOwner Inheritance object BaseEntity DefaultEntity Implements IEquatable<BaseEntity> IHaveOwner Derived NamedEntity Inherited Members BaseEntity.Hash BaseEntity.ProjectId BaseEntity.Description BaseEntity.TypeName BaseEntity.DynamicProperties BaseEntity.Equals(BaseEntity) BaseEntity.GetDynamicProperty<T>(string) BaseEntity.SetDynamicProperty<T>(string, T) BaseEntity.TryGetGetDynamicProperty<T>(string, out T) BaseEntity.CalculateHash() BaseEntity.AppendHashSources(CustomHashGenerator.HashSourceBuilder) BaseEntity.ConditionalNonSerialized() BaseEntity.Cleanup(IKepwareDefaultValueProvider, bool, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Owner The owner of the entity. [YamlIgnore] [JsonIgnore] public NamedEntity? Owner { get; set; } Property Value NamedEntity"
  },
  "api/Kepware.Api.Model.Device.html": {
    "href": "api/Kepware.Api.Model.Device.html",
    "title": "Class Device | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class Device Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents a device in a channel [Endpoint(\"/config/v1/project/channels/{channelName}/devices/{deviceName}\", null)] public class Device : NamedUidEntity, IEquatable<BaseEntity>, IHaveOwner, IHaveName Inheritance object BaseEntity DefaultEntity NamedEntity NamedUidEntity Device Implements IEquatable<BaseEntity> IHaveOwner IHaveName Inherited Members NamedUidEntity.UniqueId NamedUidEntity.RemoveUniqueId() NamedEntity.Name NamedEntity.AppendHashSources(CustomHashGenerator.HashSourceBuilder) NamedEntity.GetUpdateDiff(NamedEntity, bool) DefaultEntity.Owner BaseEntity.Hash BaseEntity.ProjectId BaseEntity.Description BaseEntity.TypeName BaseEntity.DynamicProperties BaseEntity.Equals(BaseEntity) BaseEntity.GetDynamicProperty<T>(string) BaseEntity.SetDynamicProperty<T>(string, T) BaseEntity.TryGetGetDynamicProperty<T>(string, out T) BaseEntity.CalculateHash() BaseEntity.ConditionalNonSerialized() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods HelperExtentions.Flatten(NamedEntity?) HelperExtentions.Flatten(NamedEntity?, Type) Constructors Device() public Device() Device(string, Channel) public Device(string name, Channel channel) Parameters name string channel Channel Device(string, string) public Device(string name, string channelName) Parameters name string channelName string Properties TagGroups Gets or sets the tag groups in the device [YamlIgnore] [JsonPropertyName(\"tag_groups\")] [JsonPropertyOrder(200)] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public DeviceTagGroupCollection? TagGroups { get; set; } Property Value DeviceTagGroupCollection Tags Gets or sets the tags in the device [YamlIgnore] [JsonPropertyName(\"tags\")] [JsonPropertyOrder(100)] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public DeviceTagCollection? Tags { get; set; } Property Value DeviceTagCollection UniqueIdKey Gets the unique id key protected override string UniqueIdKey { get; } Property Value string Methods Cleanup(IKepwareDefaultValueProvider, bool, CancellationToken) Recursively cleans up the device and all its children public override Task Cleanup(IKepwareDefaultValueProvider defaultValueProvider, bool blnRemoveProjectId = false, CancellationToken cancellationToken = default) Parameters defaultValueProvider IKepwareDefaultValueProvider blnRemoveProjectId bool cancellationToken CancellationToken Returns Task"
  },
  "api/Kepware.Api.Model.DeviceCollection.html": {
    "href": "api/Kepware.Api.Model.DeviceCollection.html",
    "title": "Class DeviceCollection | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class DeviceCollection Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the collection of devices in a channel [Endpoint(\"/config/v1/project/channels/{channelName}/devices\", null)] public class DeviceCollection : EntityCollection<Device>, IList<Device>, ICollection<Device>, IReadOnlyList<Device>, IReadOnlyCollection<Device>, IEnumerable<Device>, IList, ICollection, IEnumerable, IHaveOwner Inheritance object List<Device> EntityCollection<Device> DeviceCollection Implements IList<Device> ICollection<Device> IReadOnlyList<Device> IReadOnlyCollection<Device> IEnumerable<Device> IList ICollection IEnumerable IHaveOwner Inherited Members EntityCollection<Device>.Owner List<Device>.Add(Device) List<Device>.AddRange(IEnumerable<Device>) List<Device>.AsReadOnly() List<Device>.BinarySearch(int, int, Device, IComparer<Device>) List<Device>.BinarySearch(Device) List<Device>.BinarySearch(Device, IComparer<Device>) List<Device>.Clear() List<Device>.Contains(Device) List<Device>.ConvertAll<TOutput>(Converter<Device, TOutput>) List<Device>.CopyTo(int, Device[], int, int) List<Device>.CopyTo(Device[]) List<Device>.CopyTo(Device[], int) List<Device>.EnsureCapacity(int) List<Device>.Exists(Predicate<Device>) List<Device>.Find(Predicate<Device>) List<Device>.FindAll(Predicate<Device>) List<Device>.FindIndex(int, int, Predicate<Device>) List<Device>.FindIndex(int, Predicate<Device>) List<Device>.FindIndex(Predicate<Device>) List<Device>.FindLast(Predicate<Device>) List<Device>.FindLastIndex(int, int, Predicate<Device>) List<Device>.FindLastIndex(int, Predicate<Device>) List<Device>.FindLastIndex(Predicate<Device>) List<Device>.ForEach(Action<Device>) List<Device>.GetEnumerator() List<Device>.GetRange(int, int) List<Device>.IndexOf(Device) List<Device>.IndexOf(Device, int) List<Device>.IndexOf(Device, int, int) List<Device>.Insert(int, Device) List<Device>.InsertRange(int, IEnumerable<Device>) List<Device>.LastIndexOf(Device) List<Device>.LastIndexOf(Device, int) List<Device>.LastIndexOf(Device, int, int) List<Device>.Remove(Device) List<Device>.RemoveAll(Predicate<Device>) List<Device>.RemoveAt(int) List<Device>.RemoveRange(int, int) List<Device>.Reverse() List<Device>.Reverse(int, int) List<Device>.Slice(int, int) List<Device>.Sort() List<Device>.Sort(IComparer<Device>) List<Device>.Sort(Comparison<Device>) List<Device>.Sort(int, int, IComparer<Device>) List<Device>.ToArray() List<Device>.TrimExcess() List<Device>.TrueForAll(Predicate<Device>) List<Device>.Capacity List<Device>.Count List<Device>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeviceCollection() Initializes a new instance of the DeviceCollection class. public DeviceCollection()"
  },
  "api/Kepware.Api.Model.DeviceProfileCollection.html": {
    "href": "api/Kepware.Api.Model.DeviceProfileCollection.html",
    "title": "Class DeviceProfileCollection | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class DeviceProfileCollection Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the collection of deviceprofiles in a device [Endpoint(\"/config/v1/project/channels/{channelName}/devices/{deviceName}/device_profiles\", null)] public class DeviceProfileCollection : EntityCollection<DefaultEntity>, IList<DefaultEntity>, ICollection<DefaultEntity>, IReadOnlyList<DefaultEntity>, IReadOnlyCollection<DefaultEntity>, IEnumerable<DefaultEntity>, IList, ICollection, IEnumerable, IHaveOwner Inheritance object List<DefaultEntity> EntityCollection<DefaultEntity> DeviceProfileCollection Implements IList<DefaultEntity> ICollection<DefaultEntity> IReadOnlyList<DefaultEntity> IReadOnlyCollection<DefaultEntity> IEnumerable<DefaultEntity> IList ICollection IEnumerable IHaveOwner Inherited Members EntityCollection<DefaultEntity>.Owner List<DefaultEntity>.Add(DefaultEntity) List<DefaultEntity>.AddRange(IEnumerable<DefaultEntity>) List<DefaultEntity>.AsReadOnly() List<DefaultEntity>.BinarySearch(int, int, DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.BinarySearch(DefaultEntity) List<DefaultEntity>.BinarySearch(DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.Clear() List<DefaultEntity>.Contains(DefaultEntity) List<DefaultEntity>.ConvertAll<TOutput>(Converter<DefaultEntity, TOutput>) List<DefaultEntity>.CopyTo(int, DefaultEntity[], int, int) List<DefaultEntity>.CopyTo(DefaultEntity[]) List<DefaultEntity>.CopyTo(DefaultEntity[], int) List<DefaultEntity>.EnsureCapacity(int) List<DefaultEntity>.Exists(Predicate<DefaultEntity>) List<DefaultEntity>.Find(Predicate<DefaultEntity>) List<DefaultEntity>.FindAll(Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(Predicate<DefaultEntity>) List<DefaultEntity>.FindLast(Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(Predicate<DefaultEntity>) List<DefaultEntity>.ForEach(Action<DefaultEntity>) List<DefaultEntity>.GetEnumerator() List<DefaultEntity>.GetRange(int, int) List<DefaultEntity>.IndexOf(DefaultEntity) List<DefaultEntity>.IndexOf(DefaultEntity, int) List<DefaultEntity>.IndexOf(DefaultEntity, int, int) List<DefaultEntity>.Insert(int, DefaultEntity) List<DefaultEntity>.InsertRange(int, IEnumerable<DefaultEntity>) List<DefaultEntity>.LastIndexOf(DefaultEntity) List<DefaultEntity>.LastIndexOf(DefaultEntity, int) List<DefaultEntity>.LastIndexOf(DefaultEntity, int, int) List<DefaultEntity>.Remove(DefaultEntity) List<DefaultEntity>.RemoveAll(Predicate<DefaultEntity>) List<DefaultEntity>.RemoveAt(int) List<DefaultEntity>.RemoveRange(int, int) List<DefaultEntity>.Reverse() List<DefaultEntity>.Reverse(int, int) List<DefaultEntity>.Slice(int, int) List<DefaultEntity>.Sort() List<DefaultEntity>.Sort(IComparer<DefaultEntity>) List<DefaultEntity>.Sort(Comparison<DefaultEntity>) List<DefaultEntity>.Sort(int, int, IComparer<DefaultEntity>) List<DefaultEntity>.ToArray() List<DefaultEntity>.TrimExcess() List<DefaultEntity>.TrueForAll(Predicate<DefaultEntity>) List<DefaultEntity>.Capacity List<DefaultEntity>.Count List<DefaultEntity>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeviceProfileCollection() Initializes a new instance of the DeviceProfileCollection class. public DeviceProfileCollection()"
  },
  "api/Kepware.Api.Model.DeviceTagCollection.html": {
    "href": "api/Kepware.Api.Model.DeviceTagCollection.html",
    "title": "Class DeviceTagCollection | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class DeviceTagCollection Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the collection of tags in a device [Endpoint(\"/config/v1/project/channels/{channelName}/devices/{deviceName}/tags\", null)] public class DeviceTagCollection : EntityCollection<Tag>, IList<Tag>, ICollection<Tag>, IReadOnlyList<Tag>, IReadOnlyCollection<Tag>, IEnumerable<Tag>, IList, ICollection, IEnumerable, IHaveOwner Inheritance object List<Tag> EntityCollection<Tag> DeviceTagCollection Implements IList<Tag> ICollection<Tag> IReadOnlyList<Tag> IReadOnlyCollection<Tag> IEnumerable<Tag> IList ICollection IEnumerable IHaveOwner Inherited Members EntityCollection<Tag>.Owner List<Tag>.Add(Tag) List<Tag>.AddRange(IEnumerable<Tag>) List<Tag>.AsReadOnly() List<Tag>.BinarySearch(int, int, Tag, IComparer<Tag>) List<Tag>.BinarySearch(Tag) List<Tag>.BinarySearch(Tag, IComparer<Tag>) List<Tag>.Clear() List<Tag>.Contains(Tag) List<Tag>.ConvertAll<TOutput>(Converter<Tag, TOutput>) List<Tag>.CopyTo(int, Tag[], int, int) List<Tag>.CopyTo(Tag[]) List<Tag>.CopyTo(Tag[], int) List<Tag>.EnsureCapacity(int) List<Tag>.Exists(Predicate<Tag>) List<Tag>.Find(Predicate<Tag>) List<Tag>.FindAll(Predicate<Tag>) List<Tag>.FindIndex(int, int, Predicate<Tag>) List<Tag>.FindIndex(int, Predicate<Tag>) List<Tag>.FindIndex(Predicate<Tag>) List<Tag>.FindLast(Predicate<Tag>) List<Tag>.FindLastIndex(int, int, Predicate<Tag>) List<Tag>.FindLastIndex(int, Predicate<Tag>) List<Tag>.FindLastIndex(Predicate<Tag>) List<Tag>.ForEach(Action<Tag>) List<Tag>.GetEnumerator() List<Tag>.GetRange(int, int) List<Tag>.IndexOf(Tag) List<Tag>.IndexOf(Tag, int) List<Tag>.IndexOf(Tag, int, int) List<Tag>.Insert(int, Tag) List<Tag>.InsertRange(int, IEnumerable<Tag>) List<Tag>.LastIndexOf(Tag) List<Tag>.LastIndexOf(Tag, int) List<Tag>.LastIndexOf(Tag, int, int) List<Tag>.Remove(Tag) List<Tag>.RemoveAll(Predicate<Tag>) List<Tag>.RemoveAt(int) List<Tag>.RemoveRange(int, int) List<Tag>.Reverse() List<Tag>.Reverse(int, int) List<Tag>.Slice(int, int) List<Tag>.Sort() List<Tag>.Sort(IComparer<Tag>) List<Tag>.Sort(Comparison<Tag>) List<Tag>.Sort(int, int, IComparer<Tag>) List<Tag>.ToArray() List<Tag>.TrimExcess() List<Tag>.TrueForAll(Predicate<Tag>) List<Tag>.Capacity List<Tag>.Count List<Tag>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeviceTagCollection() Initializes a new instance of the DeviceTagCollection class. public DeviceTagCollection() DeviceTagCollection(IEnumerable<Tag>) Initializes a new instance of the DeviceTagCollection class. public DeviceTagCollection(IEnumerable<Tag> collection) Parameters collection IEnumerable<Tag>"
  },
  "api/Kepware.Api.Model.DeviceTagGroup.html": {
    "href": "api/Kepware.Api.Model.DeviceTagGroup.html",
    "title": "Class DeviceTagGroup | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class DeviceTagGroup Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents a tag group in a device [RecursiveEndpoint(\"/config/v1/project/channels/{channelName}/devices/{deviceName}\", \"/tag_groups/{groupName}\", typeof(DeviceTagGroup), null)] public class DeviceTagGroup : NamedEntity, IEquatable<BaseEntity>, IHaveOwner, IHaveName Inheritance object BaseEntity DefaultEntity NamedEntity DeviceTagGroup Implements IEquatable<BaseEntity> IHaveOwner IHaveName Inherited Members NamedEntity.Name NamedEntity.AppendHashSources(CustomHashGenerator.HashSourceBuilder) NamedEntity.GetUpdateDiff(NamedEntity, bool) DefaultEntity.Owner BaseEntity.Hash BaseEntity.ProjectId BaseEntity.Description BaseEntity.TypeName BaseEntity.DynamicProperties BaseEntity.Equals(BaseEntity) BaseEntity.GetDynamicProperty<T>(string) BaseEntity.SetDynamicProperty<T>(string, T) BaseEntity.TryGetGetDynamicProperty<T>(string, out T) BaseEntity.CalculateHash() BaseEntity.ConditionalNonSerialized() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods HelperExtentions.Flatten(NamedEntity?) HelperExtentions.Flatten(NamedEntity?, Type) Constructors DeviceTagGroup() public DeviceTagGroup() DeviceTagGroup(string, Device) public DeviceTagGroup(string name, Device owner) Parameters name string owner Device DeviceTagGroup(string, DeviceTagGroup) public DeviceTagGroup(string name, DeviceTagGroup owner) Parameters name string owner DeviceTagGroup Properties IsAutogenerated Get a flag indicating if the tag group is autogenerated [YamlIgnore] [JsonIgnore] public bool IsAutogenerated { get; } Property Value bool TagGroups Recursively cleans up the tag group and all its children [YamlIgnore] [JsonPropertyName(\"tag_groups\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public DeviceTagGroupCollection? TagGroups { get; set; } Property Value DeviceTagGroupCollection Tags Gets or sets the tags in the tag group [YamlIgnore] [JsonPropertyName(\"tags\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public DeviceTagGroupTagCollection? Tags { get; set; } Property Value DeviceTagGroupTagCollection Methods Cleanup(IKepwareDefaultValueProvider, bool, CancellationToken) Recursively cleans up the tag group and all its children public override Task Cleanup(IKepwareDefaultValueProvider defaultValueProvider, bool blnRemoveProjectId = false, CancellationToken cancellationToken = default) Parameters defaultValueProvider IKepwareDefaultValueProvider blnRemoveProjectId bool cancellationToken CancellationToken Returns Task"
  },
  "api/Kepware.Api.Model.DeviceTagGroupCollection.html": {
    "href": "api/Kepware.Api.Model.DeviceTagGroupCollection.html",
    "title": "Class DeviceTagGroupCollection | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class DeviceTagGroupCollection Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the collection of tag groups in a device or tag group [RecursiveEndpoint(\"/config/v1/project/channels/{channelName}/devices/{deviceName}\", \"/tag_groups/{groupName}\", typeof(DeviceTagGroup), \"/tag_groups\")] public class DeviceTagGroupCollection : EntityCollection<DeviceTagGroup>, IList<DeviceTagGroup>, ICollection<DeviceTagGroup>, IReadOnlyList<DeviceTagGroup>, IReadOnlyCollection<DeviceTagGroup>, IEnumerable<DeviceTagGroup>, IList, ICollection, IEnumerable, IHaveOwner Inheritance object List<DeviceTagGroup> EntityCollection<DeviceTagGroup> DeviceTagGroupCollection Implements IList<DeviceTagGroup> ICollection<DeviceTagGroup> IReadOnlyList<DeviceTagGroup> IReadOnlyCollection<DeviceTagGroup> IEnumerable<DeviceTagGroup> IList ICollection IEnumerable IHaveOwner Inherited Members EntityCollection<DeviceTagGroup>.Owner List<DeviceTagGroup>.Add(DeviceTagGroup) List<DeviceTagGroup>.AddRange(IEnumerable<DeviceTagGroup>) List<DeviceTagGroup>.AsReadOnly() List<DeviceTagGroup>.BinarySearch(int, int, DeviceTagGroup, IComparer<DeviceTagGroup>) List<DeviceTagGroup>.BinarySearch(DeviceTagGroup) List<DeviceTagGroup>.BinarySearch(DeviceTagGroup, IComparer<DeviceTagGroup>) List<DeviceTagGroup>.Clear() List<DeviceTagGroup>.Contains(DeviceTagGroup) List<DeviceTagGroup>.ConvertAll<TOutput>(Converter<DeviceTagGroup, TOutput>) List<DeviceTagGroup>.CopyTo(int, DeviceTagGroup[], int, int) List<DeviceTagGroup>.CopyTo(DeviceTagGroup[]) List<DeviceTagGroup>.CopyTo(DeviceTagGroup[], int) List<DeviceTagGroup>.EnsureCapacity(int) List<DeviceTagGroup>.Exists(Predicate<DeviceTagGroup>) List<DeviceTagGroup>.Find(Predicate<DeviceTagGroup>) List<DeviceTagGroup>.FindAll(Predicate<DeviceTagGroup>) List<DeviceTagGroup>.FindIndex(int, int, Predicate<DeviceTagGroup>) List<DeviceTagGroup>.FindIndex(int, Predicate<DeviceTagGroup>) List<DeviceTagGroup>.FindIndex(Predicate<DeviceTagGroup>) List<DeviceTagGroup>.FindLast(Predicate<DeviceTagGroup>) List<DeviceTagGroup>.FindLastIndex(int, int, Predicate<DeviceTagGroup>) List<DeviceTagGroup>.FindLastIndex(int, Predicate<DeviceTagGroup>) List<DeviceTagGroup>.FindLastIndex(Predicate<DeviceTagGroup>) List<DeviceTagGroup>.ForEach(Action<DeviceTagGroup>) List<DeviceTagGroup>.GetEnumerator() List<DeviceTagGroup>.GetRange(int, int) List<DeviceTagGroup>.IndexOf(DeviceTagGroup) List<DeviceTagGroup>.IndexOf(DeviceTagGroup, int) List<DeviceTagGroup>.IndexOf(DeviceTagGroup, int, int) List<DeviceTagGroup>.Insert(int, DeviceTagGroup) List<DeviceTagGroup>.InsertRange(int, IEnumerable<DeviceTagGroup>) List<DeviceTagGroup>.LastIndexOf(DeviceTagGroup) List<DeviceTagGroup>.LastIndexOf(DeviceTagGroup, int) List<DeviceTagGroup>.LastIndexOf(DeviceTagGroup, int, int) List<DeviceTagGroup>.Remove(DeviceTagGroup) List<DeviceTagGroup>.RemoveAll(Predicate<DeviceTagGroup>) List<DeviceTagGroup>.RemoveAt(int) List<DeviceTagGroup>.RemoveRange(int, int) List<DeviceTagGroup>.Reverse() List<DeviceTagGroup>.Reverse(int, int) List<DeviceTagGroup>.Slice(int, int) List<DeviceTagGroup>.Sort() List<DeviceTagGroup>.Sort(IComparer<DeviceTagGroup>) List<DeviceTagGroup>.Sort(Comparison<DeviceTagGroup>) List<DeviceTagGroup>.Sort(int, int, IComparer<DeviceTagGroup>) List<DeviceTagGroup>.ToArray() List<DeviceTagGroup>.TrimExcess() List<DeviceTagGroup>.TrueForAll(Predicate<DeviceTagGroup>) List<DeviceTagGroup>.Capacity List<DeviceTagGroup>.Count List<DeviceTagGroup>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeviceTagGroupCollection() Initializes a new instance of the DeviceTagGroupCollection class. public DeviceTagGroupCollection()"
  },
  "api/Kepware.Api.Model.DeviceTagGroupTagCollection.html": {
    "href": "api/Kepware.Api.Model.DeviceTagGroupTagCollection.html",
    "title": "Class DeviceTagGroupTagCollection | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class DeviceTagGroupTagCollection Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the collection of tag in a tag group [RecursiveEndpoint(\"/config/v1/project/channels/{channelName}/devices/{deviceName}\", \"/tag_groups/{groupName}\", typeof(DeviceTagGroup), \"/tags\")] public class DeviceTagGroupTagCollection : EntityCollection<Tag>, IList<Tag>, ICollection<Tag>, IReadOnlyList<Tag>, IReadOnlyCollection<Tag>, IEnumerable<Tag>, IList, ICollection, IEnumerable, IHaveOwner Inheritance object List<Tag> EntityCollection<Tag> DeviceTagGroupTagCollection Implements IList<Tag> ICollection<Tag> IReadOnlyList<Tag> IReadOnlyCollection<Tag> IEnumerable<Tag> IList ICollection IEnumerable IHaveOwner Inherited Members EntityCollection<Tag>.Owner List<Tag>.Add(Tag) List<Tag>.AddRange(IEnumerable<Tag>) List<Tag>.AsReadOnly() List<Tag>.BinarySearch(int, int, Tag, IComparer<Tag>) List<Tag>.BinarySearch(Tag) List<Tag>.BinarySearch(Tag, IComparer<Tag>) List<Tag>.Clear() List<Tag>.Contains(Tag) List<Tag>.ConvertAll<TOutput>(Converter<Tag, TOutput>) List<Tag>.CopyTo(int, Tag[], int, int) List<Tag>.CopyTo(Tag[]) List<Tag>.CopyTo(Tag[], int) List<Tag>.EnsureCapacity(int) List<Tag>.Exists(Predicate<Tag>) List<Tag>.Find(Predicate<Tag>) List<Tag>.FindAll(Predicate<Tag>) List<Tag>.FindIndex(int, int, Predicate<Tag>) List<Tag>.FindIndex(int, Predicate<Tag>) List<Tag>.FindIndex(Predicate<Tag>) List<Tag>.FindLast(Predicate<Tag>) List<Tag>.FindLastIndex(int, int, Predicate<Tag>) List<Tag>.FindLastIndex(int, Predicate<Tag>) List<Tag>.FindLastIndex(Predicate<Tag>) List<Tag>.ForEach(Action<Tag>) List<Tag>.GetEnumerator() List<Tag>.GetRange(int, int) List<Tag>.IndexOf(Tag) List<Tag>.IndexOf(Tag, int) List<Tag>.IndexOf(Tag, int, int) List<Tag>.Insert(int, Tag) List<Tag>.InsertRange(int, IEnumerable<Tag>) List<Tag>.LastIndexOf(Tag) List<Tag>.LastIndexOf(Tag, int) List<Tag>.LastIndexOf(Tag, int, int) List<Tag>.Remove(Tag) List<Tag>.RemoveAll(Predicate<Tag>) List<Tag>.RemoveAt(int) List<Tag>.RemoveRange(int, int) List<Tag>.Reverse() List<Tag>.Reverse(int, int) List<Tag>.Slice(int, int) List<Tag>.Sort() List<Tag>.Sort(IComparer<Tag>) List<Tag>.Sort(Comparison<Tag>) List<Tag>.Sort(int, int, IComparer<Tag>) List<Tag>.ToArray() List<Tag>.TrimExcess() List<Tag>.TrueForAll(Predicate<Tag>) List<Tag>.Capacity List<Tag>.Count List<Tag>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeviceTagGroupTagCollection() Initializes a new instance of the DeviceTagGroupTagCollection class. public DeviceTagGroupTagCollection() DeviceTagGroupTagCollection(IEnumerable<Tag>) Initializes a new instance of the DeviceTagGroupTagCollection class. public DeviceTagGroupTagCollection(IEnumerable<Tag> collection) Parameters collection IEnumerable<Tag>"
  },
  "api/Kepware.Api.Model.Docs.Channel.html": {
    "href": "api/Kepware.Api.Model.Docs.Channel.html",
    "title": "Class Docs.Channel | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class Docs.Channel Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents a channel in the API documentation. [Endpoint(\"/config/v1/doc/drivers/{driverName}/channels/\", null)] public class Docs.Channel : Docs.CollectionDefinition Inheritance object Docs.CollectionDefinition Docs.Channel Inherited Members Docs.CollectionDefinition.Empty Docs.CollectionDefinition.TypeDefinition Docs.CollectionDefinition.PropertyDefinitions object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Kepware.Api.Model.Docs.CollectionDefinition.html": {
    "href": "api/Kepware.Api.Model.Docs.CollectionDefinition.html",
    "title": "Class Docs.CollectionDefinition | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class Docs.CollectionDefinition Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents a collection definition in the API documentation. public abstract class Docs.CollectionDefinition Inheritance object Docs.CollectionDefinition Derived Docs.Channel Docs.Device Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Empty An empty collection definition. public static readonly Docs.CollectionDefinition Empty Field Value Docs.CollectionDefinition Properties PropertyDefinitions Gets or sets the property definitions of the collection. [JsonPropertyName(\"property_definitions\")] public List<Docs.PropertyDefinition>? PropertyDefinitions { get; set; } Property Value List<Docs.PropertyDefinition> TypeDefinition Gets or sets the type definition of the collection. [JsonPropertyName(\"type_definition\")] public Docs.TypeDefinition? TypeDefinition { get; set; } Property Value Docs.TypeDefinition"
  },
  "api/Kepware.Api.Model.Docs.Device.html": {
    "href": "api/Kepware.Api.Model.Docs.Device.html",
    "title": "Class Docs.Device | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class Docs.Device Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents a device in the API documentation. [Endpoint(\"/config/v1/doc/drivers/{driverName}/devices/\", null)] public class Docs.Device : Docs.CollectionDefinition Inheritance object Docs.CollectionDefinition Docs.Device Inherited Members Docs.CollectionDefinition.Empty Docs.CollectionDefinition.TypeDefinition Docs.CollectionDefinition.PropertyDefinitions object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Kepware.Api.Model.Docs.Driver.html": {
    "href": "api/Kepware.Api.Model.Docs.Driver.html",
    "title": "Class Docs.Driver | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class Docs.Driver Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents a driver in the API documentation. [Endpoint(\"/config/v1/doc/drivers/\", null)] public class Docs.Driver Inheritance object Docs.Driver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DisplayName Gets or sets the display name of the driver. [JsonPropertyName(\"display_name\")] public string? DisplayName { get; set; } Property Value string DocChannels Gets or sets the documentation channels of the driver. [JsonPropertyName(\"doc_channels\")] public string? DocChannels { get; set; } Property Value string DocDevices Gets or sets the documentation devices of the driver. [JsonPropertyName(\"doc_devices\")] public string? DocDevices { get; set; } Property Value string DocMeterGroups Gets or sets the documentation meter groups of the driver. [JsonPropertyName(\"doc_meter_groups\")] public string? DocMeterGroups { get; set; } Property Value string DocMeters Gets or sets the documentation meters of the driver. [JsonPropertyName(\"doc_meters\")] public string? DocMeters { get; set; } Property Value string Namespace Gets or sets the namespace of the driver. [JsonPropertyName(\"namespace\")] public string? Namespace { get; set; } Property Value string"
  },
  "api/Kepware.Api.Model.Docs.PropertyDefinition.html": {
    "href": "api/Kepware.Api.Model.Docs.PropertyDefinition.html",
    "title": "Class Docs.PropertyDefinition | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class Docs.PropertyDefinition Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents a property definition in the API documentation. public class Docs.PropertyDefinition Inheritance object Docs.PropertyDefinition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DefaultValue Gets or sets the default value of the property. [JsonPropertyName(\"default_value\")] public object? DefaultValue { get; set; } Property Value object DisplayDescription Gets or sets the display description of the property. [JsonPropertyName(\"display_description\")] public string? DisplayDescription { get; set; } Property Value string DisplayName Gets or sets the display name of the property. [JsonPropertyName(\"display_name\")] public string? DisplayName { get; set; } Property Value string GroupName Gets or sets the group name of the property. [JsonPropertyName(\"group_name\")] public string? GroupName { get; set; } Property Value string MaximumLength Gets or sets the maximum length of the property. [JsonPropertyName(\"maximum_length\")] public int MaximumLength { get; set; } Property Value int MinimumLength Gets or sets the minimum length of the property. [JsonPropertyName(\"minimum_length\")] public int MinimumLength { get; set; } Property Value int ReadOnly Gets or sets a value indicating whether the property is read-only. [JsonPropertyName(\"read_only\")] public bool ReadOnly { get; set; } Property Value bool Required Gets or sets a value indicating whether the property is required. [JsonPropertyName(\"required\")] public bool Required { get; set; } Property Value bool SectionName Gets or sets the section name of the property. [JsonPropertyName(\"section_name\")] public string? SectionName { get; set; } Property Value string ServerOnly Gets or sets a value indicating whether the property is server-only. [JsonPropertyName(\"server_only\")] public bool ServerOnly { get; set; } Property Value bool SymbolicName Gets or sets the symbolic name of the property. [JsonPropertyName(\"symbolic_name\")] public string? SymbolicName { get; set; } Property Value string Type Gets or sets the type of the property. [JsonPropertyName(\"type\")] public string? Type { get; set; } Property Value string Methods GetDefaultValue() Gets the default value as a JsonElement. public JsonElement GetDefaultValue() Returns JsonElement The default value as a JsonElement."
  },
  "api/Kepware.Api.Model.Docs.TypeDefinition.html": {
    "href": "api/Kepware.Api.Model.Docs.TypeDefinition.html",
    "title": "Class Docs.TypeDefinition | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class Docs.TypeDefinition Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents a type definition in the API documentation. public class Docs.TypeDefinition Inheritance object Docs.TypeDefinition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccessControlled Gets or sets a value indicating whether the type is access controlled. [JsonPropertyName(\"access_controlled\")] public bool AccessControlled { get; set; } Property Value bool AutoGenerated Gets or sets a value indicating whether the type is auto-generated. [JsonPropertyName(\"auto_generated\")] public bool AutoGenerated { get; set; } Property Value bool CanCreate Gets or sets a value indicating whether the type can be created. [JsonPropertyName(\"can_create\")] public bool CanCreate { get; set; } Property Value bool CanDelete Gets or sets a value indicating whether the type can be deleted. [JsonPropertyName(\"can_delete\")] public bool CanDelete { get; set; } Property Value bool CanModify Gets or sets a value indicating whether the type can be modified. [JsonPropertyName(\"can_modify\")] public bool CanModify { get; set; } Property Value bool ChildCollections Gets or sets the child collections of the type. [JsonPropertyName(\"child_collections\")] public List<string>? ChildCollections { get; set; } Property Value List<string> Collection Gets or sets the collection of the type. [JsonPropertyName(\"collection\")] public string? Collection { get; set; } Property Value string Name Gets or sets the name of the type. [JsonPropertyName(\"name\")] public string? Name { get; set; } Property Value string Namespace Gets or sets the namespace of the type. [JsonPropertyName(\"namespace\")] public string? Namespace { get; set; } Property Value string RequiresDriver Gets or sets a value indicating whether the type requires a driver. [JsonPropertyName(\"requires_driver\")] public bool RequiresDriver { get; set; } Property Value bool"
  },
  "api/Kepware.Api.Model.Docs.html": {
    "href": "api/Kepware.Api.Model.Docs.html",
    "title": "Class Docs | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class Docs Namespace Kepware.Api.Model Assembly Kepware.Api.dll Contains classes and definitions for API documentation. public static class Docs Inheritance object Docs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Kepware.Api.Model.EndpointAttribute.html": {
    "href": "api/Kepware.Api.Model.EndpointAttribute.html",
    "title": "Class EndpointAttribute | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class EndpointAttribute Namespace Kepware.Api.Model Assembly Kepware.Api.dll [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)] public class EndpointAttribute : Attribute Inheritance object Attribute EndpointAttribute Derived RecursiveEndpointAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EndpointAttribute(string, string?) public EndpointAttribute(string endpointTemplate, string? suffix = null) Parameters endpointTemplate string suffix string Properties EndpointTemplate public string EndpointTemplate { get; } Property Value string Suffix public string? Suffix { get; } Property Value string"
  },
  "api/Kepware.Api.Model.EntityCollection-1.html": {
    "href": "api/Kepware.Api.Model.EntityCollection-1.html",
    "title": "Class EntityCollection<T> | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class EntityCollection<T> Namespace Kepware.Api.Model Assembly Kepware.Api.dll public class EntityCollection<T> : List<T>, IList<T>, ICollection<T>, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IList, ICollection, IEnumerable, IHaveOwner where T : BaseEntity Type Parameters T Inheritance object List<T> EntityCollection<T> Implements IList<T> ICollection<T> IReadOnlyList<T> IReadOnlyCollection<T> IEnumerable<T> IList ICollection IEnumerable IHaveOwner Derived ChannelCollection ConsumerExchangeCollection ConsumerExchangeGroupCollection DeviceCollection DeviceProfileCollection DeviceTagCollection DeviceTagGroupCollection DeviceTagGroupTagCollection OmniAlarmCollection OmniMappingCollection OmniMappingGroupCollection PhoneEntryCollection PhonebookCollection ProducerExchangeCollection ProducerExchangeGroupCollection Inherited Members List<T>.Add(T) List<T>.AddRange(IEnumerable<T>) List<T>.AsReadOnly() List<T>.BinarySearch(int, int, T, IComparer<T>) List<T>.BinarySearch(T) List<T>.BinarySearch(T, IComparer<T>) List<T>.Clear() List<T>.Contains(T) List<T>.ConvertAll<TOutput>(Converter<T, TOutput>) List<T>.CopyTo(int, T[], int, int) List<T>.CopyTo(T[]) List<T>.CopyTo(T[], int) List<T>.EnsureCapacity(int) List<T>.Exists(Predicate<T>) List<T>.Find(Predicate<T>) List<T>.FindAll(Predicate<T>) List<T>.FindIndex(int, int, Predicate<T>) List<T>.FindIndex(int, Predicate<T>) List<T>.FindIndex(Predicate<T>) List<T>.FindLast(Predicate<T>) List<T>.FindLastIndex(int, int, Predicate<T>) List<T>.FindLastIndex(int, Predicate<T>) List<T>.FindLastIndex(Predicate<T>) List<T>.ForEach(Action<T>) List<T>.GetEnumerator() List<T>.GetRange(int, int) List<T>.IndexOf(T) List<T>.IndexOf(T, int) List<T>.IndexOf(T, int, int) List<T>.Insert(int, T) List<T>.InsertRange(int, IEnumerable<T>) List<T>.LastIndexOf(T) List<T>.LastIndexOf(T, int) List<T>.LastIndexOf(T, int, int) List<T>.Remove(T) List<T>.RemoveAll(Predicate<T>) List<T>.RemoveAt(int) List<T>.RemoveRange(int, int) List<T>.Reverse() List<T>.Reverse(int, int) List<T>.Slice(int, int) List<T>.Sort() List<T>.Sort(IComparer<T>) List<T>.Sort(Comparison<T>) List<T>.Sort(int, int, IComparer<T>) List<T>.ToArray() List<T>.TrimExcess() List<T>.TrueForAll(Predicate<T>) List<T>.Capacity List<T>.Count List<T>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EntityCollection() public EntityCollection() EntityCollection(IEnumerable<T>) public EntityCollection(IEnumerable<T> collection) Parameters collection IEnumerable<T> Properties Owner The owner of the entity. [JsonIgnore] [YamlIgnore] public NamedEntity? Owner { get; set; } Property Value NamedEntity"
  },
  "api/Kepware.Api.Model.EntityFactory.html": {
    "href": "api/Kepware.Api.Model.EntityFactory.html",
    "title": "Class EntityFactory | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class EntityFactory Namespace Kepware.Api.Model Assembly Kepware.Api.dll public static class EntityFactory Inheritance object EntityFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateInstance(Type) public static BaseEntity CreateInstance(Type type) Parameters type Type Returns BaseEntity"
  },
  "api/Kepware.Api.Model.IDataTypeEnumConverter.html": {
    "href": "api/Kepware.Api.Model.IDataTypeEnumConverter.html",
    "title": "Interface IDataTypeEnumConverter | Kepware Configuration API .NET SDK Documentation",
    "summary": "Interface IDataTypeEnumConverter Namespace Kepware.Api.Model Assembly Kepware.Api.dll public interface IDataTypeEnumConverter Methods ConvertFromString(string) int ConvertFromString(string value) Parameters value string Returns int ConvertToString(int) string ConvertToString(int value) Parameters value int Returns string"
  },
  "api/Kepware.Api.Model.IHaveName.html": {
    "href": "api/Kepware.Api.Model.IHaveName.html",
    "title": "Interface IHaveName | Kepware Configuration API .NET SDK Documentation",
    "summary": "Interface IHaveName Namespace Kepware.Api.Model Assembly Kepware.Api.dll Interface for entities that have a name. public interface IHaveName Properties Name The name of the entity. string Name { get; } Property Value string"
  },
  "api/Kepware.Api.Model.IHaveOwner.html": {
    "href": "api/Kepware.Api.Model.IHaveOwner.html",
    "title": "Interface IHaveOwner | Kepware Configuration API .NET SDK Documentation",
    "summary": "Interface IHaveOwner Namespace Kepware.Api.Model Assembly Kepware.Api.dll Interface for entities that have an owner. public interface IHaveOwner Properties Owner The owner of the entity. [JsonIgnore] [YamlIgnore] NamedEntity? Owner { get; } Property Value NamedEntity"
  },
  "api/Kepware.Api.Model.NamedEntity.html": {
    "href": "api/Kepware.Api.Model.NamedEntity.html",
    "title": "Class NamedEntity | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class NamedEntity Namespace Kepware.Api.Model Assembly Kepware.Api.dll A named entity with a unique name and description. public class NamedEntity : DefaultEntity, IEquatable<BaseEntity>, IHaveOwner, IHaveName Inheritance object BaseEntity DefaultEntity NamedEntity Implements IEquatable<BaseEntity> IHaveOwner IHaveName Derived DeviceTagGroup NamedUidEntity Tag Inherited Members DefaultEntity.Owner BaseEntity.Hash BaseEntity.ProjectId BaseEntity.Description BaseEntity.TypeName BaseEntity.DynamicProperties BaseEntity.Equals(BaseEntity) BaseEntity.GetDynamicProperty<T>(string) BaseEntity.SetDynamicProperty<T>(string, T) BaseEntity.TryGetGetDynamicProperty<T>(string, out T) BaseEntity.CalculateHash() BaseEntity.ConditionalNonSerialized() BaseEntity.Cleanup(IKepwareDefaultValueProvider, bool, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods HelperExtentions.Flatten(NamedEntity?) HelperExtentions.Flatten(NamedEntity?, Type) Constructors NamedEntity() public NamedEntity() NamedEntity(string) public NamedEntity(string name) Parameters name string Properties Name The name of the entity. [JsonPropertyName(\"common.ALLTYPES_NAME\")] [YamlIgnore] public string Name { get; set; } Property Value string Methods AppendHashSources(HashSourceBuilder) Appends additional hash sources for named entities. protected override CustomHashGenerator.HashSourceBuilder AppendHashSources(CustomHashGenerator.HashSourceBuilder builder) Parameters builder CustomHashGenerator.HashSourceBuilder Returns CustomHashGenerator.HashSourceBuilder GetUpdateDiff(NamedEntity, bool) Retrieves the differences between this entity and another. public virtual Dictionary<string, JsonElement> GetUpdateDiff(NamedEntity other, bool blnAddProjectId = true) Parameters other NamedEntity The other entity to compare with. blnAddProjectId bool Whether to include the project ID in the differences. Returns Dictionary<string, JsonElement> A dictionary of differences."
  },
  "api/Kepware.Api.Model.NamedUidEntity.html": {
    "href": "api/Kepware.Api.Model.NamedUidEntity.html",
    "title": "Class NamedUidEntity | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class NamedUidEntity Namespace Kepware.Api.Model Assembly Kepware.Api.dll A named entity with a unique identifier. public abstract class NamedUidEntity : NamedEntity, IEquatable<BaseEntity>, IHaveOwner, IHaveName Inheritance object BaseEntity DefaultEntity NamedEntity NamedUidEntity Implements IEquatable<BaseEntity> IHaveOwner IHaveName Derived Channel Device Inherited Members NamedEntity.Name NamedEntity.AppendHashSources(CustomHashGenerator.HashSourceBuilder) NamedEntity.GetUpdateDiff(NamedEntity, bool) DefaultEntity.Owner BaseEntity.Hash BaseEntity.ProjectId BaseEntity.Description BaseEntity.TypeName BaseEntity.DynamicProperties BaseEntity.Equals(BaseEntity) BaseEntity.GetDynamicProperty<T>(string) BaseEntity.SetDynamicProperty<T>(string, T) BaseEntity.TryGetGetDynamicProperty<T>(string, out T) BaseEntity.CalculateHash() BaseEntity.ConditionalNonSerialized() BaseEntity.Cleanup(IKepwareDefaultValueProvider, bool, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods HelperExtentions.Flatten(NamedEntity?) HelperExtentions.Flatten(NamedEntity?, Type) Constructors NamedUidEntity() protected NamedUidEntity() NamedUidEntity(string) protected NamedUidEntity(string name) Parameters name string Properties UniqueId The unique ID of the entity. [JsonIgnore] [YamlIgnore] public long UniqueId { get; } Property Value long UniqueIdKey The key used to retrieve the unique ID. protected abstract string UniqueIdKey { get; } Property Value string Methods RemoveUniqueId() Removes the unique ID from the entity. public void RemoveUniqueId()"
  },
  "api/Kepware.Api.Model.OmniAlarmCollection.html": {
    "href": "api/Kepware.Api.Model.OmniAlarmCollection.html",
    "title": "Class OmniAlarmCollection | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class OmniAlarmCollection Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the collection of omni gas alarms in an omni mapping [Endpoint(\"/config/v1/project/channels/{channelName}/devices/{deviceName}/omni_mapping_groups/{groupName}/omni_mappings/{mappingName}/omni_gas_alarms\", null)] public class OmniAlarmCollection : EntityCollection<DefaultEntity>, IList<DefaultEntity>, ICollection<DefaultEntity>, IReadOnlyList<DefaultEntity>, IReadOnlyCollection<DefaultEntity>, IEnumerable<DefaultEntity>, IList, ICollection, IEnumerable, IHaveOwner Inheritance object List<DefaultEntity> EntityCollection<DefaultEntity> OmniAlarmCollection Implements IList<DefaultEntity> ICollection<DefaultEntity> IReadOnlyList<DefaultEntity> IReadOnlyCollection<DefaultEntity> IEnumerable<DefaultEntity> IList ICollection IEnumerable IHaveOwner Inherited Members EntityCollection<DefaultEntity>.Owner List<DefaultEntity>.Add(DefaultEntity) List<DefaultEntity>.AddRange(IEnumerable<DefaultEntity>) List<DefaultEntity>.AsReadOnly() List<DefaultEntity>.BinarySearch(int, int, DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.BinarySearch(DefaultEntity) List<DefaultEntity>.BinarySearch(DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.Clear() List<DefaultEntity>.Contains(DefaultEntity) List<DefaultEntity>.ConvertAll<TOutput>(Converter<DefaultEntity, TOutput>) List<DefaultEntity>.CopyTo(int, DefaultEntity[], int, int) List<DefaultEntity>.CopyTo(DefaultEntity[]) List<DefaultEntity>.CopyTo(DefaultEntity[], int) List<DefaultEntity>.EnsureCapacity(int) List<DefaultEntity>.Exists(Predicate<DefaultEntity>) List<DefaultEntity>.Find(Predicate<DefaultEntity>) List<DefaultEntity>.FindAll(Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(Predicate<DefaultEntity>) List<DefaultEntity>.FindLast(Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(Predicate<DefaultEntity>) List<DefaultEntity>.ForEach(Action<DefaultEntity>) List<DefaultEntity>.GetEnumerator() List<DefaultEntity>.GetRange(int, int) List<DefaultEntity>.IndexOf(DefaultEntity) List<DefaultEntity>.IndexOf(DefaultEntity, int) List<DefaultEntity>.IndexOf(DefaultEntity, int, int) List<DefaultEntity>.Insert(int, DefaultEntity) List<DefaultEntity>.InsertRange(int, IEnumerable<DefaultEntity>) List<DefaultEntity>.LastIndexOf(DefaultEntity) List<DefaultEntity>.LastIndexOf(DefaultEntity, int) List<DefaultEntity>.LastIndexOf(DefaultEntity, int, int) List<DefaultEntity>.Remove(DefaultEntity) List<DefaultEntity>.RemoveAll(Predicate<DefaultEntity>) List<DefaultEntity>.RemoveAt(int) List<DefaultEntity>.RemoveRange(int, int) List<DefaultEntity>.Reverse() List<DefaultEntity>.Reverse(int, int) List<DefaultEntity>.Slice(int, int) List<DefaultEntity>.Sort() List<DefaultEntity>.Sort(IComparer<DefaultEntity>) List<DefaultEntity>.Sort(Comparison<DefaultEntity>) List<DefaultEntity>.Sort(int, int, IComparer<DefaultEntity>) List<DefaultEntity>.ToArray() List<DefaultEntity>.TrimExcess() List<DefaultEntity>.TrueForAll(Predicate<DefaultEntity>) List<DefaultEntity>.Capacity List<DefaultEntity>.Count List<DefaultEntity>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OmniAlarmCollection() Initializes a new instance of the OmniAlarmCollection class. public OmniAlarmCollection()"
  },
  "api/Kepware.Api.Model.OmniMappingCollection.html": {
    "href": "api/Kepware.Api.Model.OmniMappingCollection.html",
    "title": "Class OmniMappingCollection | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class OmniMappingCollection Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the collection of omni mappings in an omni mapping group [Endpoint(\"/config/v1/project/channels/{channelName}/devices/{deviceName}/omni_mapping_groups/{groupName}/omni_mappings\", null)] public class OmniMappingCollection : EntityCollection<DefaultEntity>, IList<DefaultEntity>, ICollection<DefaultEntity>, IReadOnlyList<DefaultEntity>, IReadOnlyCollection<DefaultEntity>, IEnumerable<DefaultEntity>, IList, ICollection, IEnumerable, IHaveOwner Inheritance object List<DefaultEntity> EntityCollection<DefaultEntity> OmniMappingCollection Implements IList<DefaultEntity> ICollection<DefaultEntity> IReadOnlyList<DefaultEntity> IReadOnlyCollection<DefaultEntity> IEnumerable<DefaultEntity> IList ICollection IEnumerable IHaveOwner Inherited Members EntityCollection<DefaultEntity>.Owner List<DefaultEntity>.Add(DefaultEntity) List<DefaultEntity>.AddRange(IEnumerable<DefaultEntity>) List<DefaultEntity>.AsReadOnly() List<DefaultEntity>.BinarySearch(int, int, DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.BinarySearch(DefaultEntity) List<DefaultEntity>.BinarySearch(DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.Clear() List<DefaultEntity>.Contains(DefaultEntity) List<DefaultEntity>.ConvertAll<TOutput>(Converter<DefaultEntity, TOutput>) List<DefaultEntity>.CopyTo(int, DefaultEntity[], int, int) List<DefaultEntity>.CopyTo(DefaultEntity[]) List<DefaultEntity>.CopyTo(DefaultEntity[], int) List<DefaultEntity>.EnsureCapacity(int) List<DefaultEntity>.Exists(Predicate<DefaultEntity>) List<DefaultEntity>.Find(Predicate<DefaultEntity>) List<DefaultEntity>.FindAll(Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(Predicate<DefaultEntity>) List<DefaultEntity>.FindLast(Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(Predicate<DefaultEntity>) List<DefaultEntity>.ForEach(Action<DefaultEntity>) List<DefaultEntity>.GetEnumerator() List<DefaultEntity>.GetRange(int, int) List<DefaultEntity>.IndexOf(DefaultEntity) List<DefaultEntity>.IndexOf(DefaultEntity, int) List<DefaultEntity>.IndexOf(DefaultEntity, int, int) List<DefaultEntity>.Insert(int, DefaultEntity) List<DefaultEntity>.InsertRange(int, IEnumerable<DefaultEntity>) List<DefaultEntity>.LastIndexOf(DefaultEntity) List<DefaultEntity>.LastIndexOf(DefaultEntity, int) List<DefaultEntity>.LastIndexOf(DefaultEntity, int, int) List<DefaultEntity>.Remove(DefaultEntity) List<DefaultEntity>.RemoveAll(Predicate<DefaultEntity>) List<DefaultEntity>.RemoveAt(int) List<DefaultEntity>.RemoveRange(int, int) List<DefaultEntity>.Reverse() List<DefaultEntity>.Reverse(int, int) List<DefaultEntity>.Slice(int, int) List<DefaultEntity>.Sort() List<DefaultEntity>.Sort(IComparer<DefaultEntity>) List<DefaultEntity>.Sort(Comparison<DefaultEntity>) List<DefaultEntity>.Sort(int, int, IComparer<DefaultEntity>) List<DefaultEntity>.ToArray() List<DefaultEntity>.TrimExcess() List<DefaultEntity>.TrueForAll(Predicate<DefaultEntity>) List<DefaultEntity>.Capacity List<DefaultEntity>.Count List<DefaultEntity>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OmniMappingCollection() Initializes a new instance of the OmniMappingCollection class. public OmniMappingCollection()"
  },
  "api/Kepware.Api.Model.OmniMappingGroupCollection.html": {
    "href": "api/Kepware.Api.Model.OmniMappingGroupCollection.html",
    "title": "Class OmniMappingGroupCollection | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class OmniMappingGroupCollection Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the collection of omni mapping groups in a device [Endpoint(\"/config/v1/project/channels/{channelName}/devices/{deviceName}/omni_mapping_groups\", null)] public class OmniMappingGroupCollection : EntityCollection<DefaultEntity>, IList<DefaultEntity>, ICollection<DefaultEntity>, IReadOnlyList<DefaultEntity>, IReadOnlyCollection<DefaultEntity>, IEnumerable<DefaultEntity>, IList, ICollection, IEnumerable, IHaveOwner Inheritance object List<DefaultEntity> EntityCollection<DefaultEntity> OmniMappingGroupCollection Implements IList<DefaultEntity> ICollection<DefaultEntity> IReadOnlyList<DefaultEntity> IReadOnlyCollection<DefaultEntity> IEnumerable<DefaultEntity> IList ICollection IEnumerable IHaveOwner Inherited Members EntityCollection<DefaultEntity>.Owner List<DefaultEntity>.Add(DefaultEntity) List<DefaultEntity>.AddRange(IEnumerable<DefaultEntity>) List<DefaultEntity>.AsReadOnly() List<DefaultEntity>.BinarySearch(int, int, DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.BinarySearch(DefaultEntity) List<DefaultEntity>.BinarySearch(DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.Clear() List<DefaultEntity>.Contains(DefaultEntity) List<DefaultEntity>.ConvertAll<TOutput>(Converter<DefaultEntity, TOutput>) List<DefaultEntity>.CopyTo(int, DefaultEntity[], int, int) List<DefaultEntity>.CopyTo(DefaultEntity[]) List<DefaultEntity>.CopyTo(DefaultEntity[], int) List<DefaultEntity>.EnsureCapacity(int) List<DefaultEntity>.Exists(Predicate<DefaultEntity>) List<DefaultEntity>.Find(Predicate<DefaultEntity>) List<DefaultEntity>.FindAll(Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(Predicate<DefaultEntity>) List<DefaultEntity>.FindLast(Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(Predicate<DefaultEntity>) List<DefaultEntity>.ForEach(Action<DefaultEntity>) List<DefaultEntity>.GetEnumerator() List<DefaultEntity>.GetRange(int, int) List<DefaultEntity>.IndexOf(DefaultEntity) List<DefaultEntity>.IndexOf(DefaultEntity, int) List<DefaultEntity>.IndexOf(DefaultEntity, int, int) List<DefaultEntity>.Insert(int, DefaultEntity) List<DefaultEntity>.InsertRange(int, IEnumerable<DefaultEntity>) List<DefaultEntity>.LastIndexOf(DefaultEntity) List<DefaultEntity>.LastIndexOf(DefaultEntity, int) List<DefaultEntity>.LastIndexOf(DefaultEntity, int, int) List<DefaultEntity>.Remove(DefaultEntity) List<DefaultEntity>.RemoveAll(Predicate<DefaultEntity>) List<DefaultEntity>.RemoveAt(int) List<DefaultEntity>.RemoveRange(int, int) List<DefaultEntity>.Reverse() List<DefaultEntity>.Reverse(int, int) List<DefaultEntity>.Slice(int, int) List<DefaultEntity>.Sort() List<DefaultEntity>.Sort(IComparer<DefaultEntity>) List<DefaultEntity>.Sort(Comparison<DefaultEntity>) List<DefaultEntity>.Sort(int, int, IComparer<DefaultEntity>) List<DefaultEntity>.ToArray() List<DefaultEntity>.TrimExcess() List<DefaultEntity>.TrueForAll(Predicate<DefaultEntity>) List<DefaultEntity>.Capacity List<DefaultEntity>.Count List<DefaultEntity>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OmniMappingGroupCollection() Initializes a new instance of the OmniMappingGroupCollection class. public OmniMappingGroupCollection()"
  },
  "api/Kepware.Api.Model.PhoneEntryCollection.html": {
    "href": "api/Kepware.Api.Model.PhoneEntryCollection.html",
    "title": "Class PhoneEntryCollection | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class PhoneEntryCollection Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the collection of phone entries in a phonebook [Endpoint(\"/config/v1/project/channels/{channelName}/phonebooks/{phonebookName}/phonelist\", null)] public class PhoneEntryCollection : EntityCollection<DefaultEntity>, IList<DefaultEntity>, ICollection<DefaultEntity>, IReadOnlyList<DefaultEntity>, IReadOnlyCollection<DefaultEntity>, IEnumerable<DefaultEntity>, IList, ICollection, IEnumerable, IHaveOwner Inheritance object List<DefaultEntity> EntityCollection<DefaultEntity> PhoneEntryCollection Implements IList<DefaultEntity> ICollection<DefaultEntity> IReadOnlyList<DefaultEntity> IReadOnlyCollection<DefaultEntity> IEnumerable<DefaultEntity> IList ICollection IEnumerable IHaveOwner Inherited Members EntityCollection<DefaultEntity>.Owner List<DefaultEntity>.Add(DefaultEntity) List<DefaultEntity>.AddRange(IEnumerable<DefaultEntity>) List<DefaultEntity>.AsReadOnly() List<DefaultEntity>.BinarySearch(int, int, DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.BinarySearch(DefaultEntity) List<DefaultEntity>.BinarySearch(DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.Clear() List<DefaultEntity>.Contains(DefaultEntity) List<DefaultEntity>.ConvertAll<TOutput>(Converter<DefaultEntity, TOutput>) List<DefaultEntity>.CopyTo(int, DefaultEntity[], int, int) List<DefaultEntity>.CopyTo(DefaultEntity[]) List<DefaultEntity>.CopyTo(DefaultEntity[], int) List<DefaultEntity>.EnsureCapacity(int) List<DefaultEntity>.Exists(Predicate<DefaultEntity>) List<DefaultEntity>.Find(Predicate<DefaultEntity>) List<DefaultEntity>.FindAll(Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(Predicate<DefaultEntity>) List<DefaultEntity>.FindLast(Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(Predicate<DefaultEntity>) List<DefaultEntity>.ForEach(Action<DefaultEntity>) List<DefaultEntity>.GetEnumerator() List<DefaultEntity>.GetRange(int, int) List<DefaultEntity>.IndexOf(DefaultEntity) List<DefaultEntity>.IndexOf(DefaultEntity, int) List<DefaultEntity>.IndexOf(DefaultEntity, int, int) List<DefaultEntity>.Insert(int, DefaultEntity) List<DefaultEntity>.InsertRange(int, IEnumerable<DefaultEntity>) List<DefaultEntity>.LastIndexOf(DefaultEntity) List<DefaultEntity>.LastIndexOf(DefaultEntity, int) List<DefaultEntity>.LastIndexOf(DefaultEntity, int, int) List<DefaultEntity>.Remove(DefaultEntity) List<DefaultEntity>.RemoveAll(Predicate<DefaultEntity>) List<DefaultEntity>.RemoveAt(int) List<DefaultEntity>.RemoveRange(int, int) List<DefaultEntity>.Reverse() List<DefaultEntity>.Reverse(int, int) List<DefaultEntity>.Slice(int, int) List<DefaultEntity>.Sort() List<DefaultEntity>.Sort(IComparer<DefaultEntity>) List<DefaultEntity>.Sort(Comparison<DefaultEntity>) List<DefaultEntity>.Sort(int, int, IComparer<DefaultEntity>) List<DefaultEntity>.ToArray() List<DefaultEntity>.TrimExcess() List<DefaultEntity>.TrueForAll(Predicate<DefaultEntity>) List<DefaultEntity>.Capacity List<DefaultEntity>.Count List<DefaultEntity>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PhoneEntryCollection() Initializes a new instance of the PhoneEntryCollection class. public PhoneEntryCollection()"
  },
  "api/Kepware.Api.Model.PhonebookCollection.html": {
    "href": "api/Kepware.Api.Model.PhonebookCollection.html",
    "title": "Class PhonebookCollection | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class PhonebookCollection Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the collection of phonebooks in a channel [Endpoint(\"/config/v1/project/channels/{channelName}/phonebooks\", null)] public class PhonebookCollection : EntityCollection<DefaultEntity>, IList<DefaultEntity>, ICollection<DefaultEntity>, IReadOnlyList<DefaultEntity>, IReadOnlyCollection<DefaultEntity>, IEnumerable<DefaultEntity>, IList, ICollection, IEnumerable, IHaveOwner Inheritance object List<DefaultEntity> EntityCollection<DefaultEntity> PhonebookCollection Implements IList<DefaultEntity> ICollection<DefaultEntity> IReadOnlyList<DefaultEntity> IReadOnlyCollection<DefaultEntity> IEnumerable<DefaultEntity> IList ICollection IEnumerable IHaveOwner Inherited Members EntityCollection<DefaultEntity>.Owner List<DefaultEntity>.Add(DefaultEntity) List<DefaultEntity>.AddRange(IEnumerable<DefaultEntity>) List<DefaultEntity>.AsReadOnly() List<DefaultEntity>.BinarySearch(int, int, DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.BinarySearch(DefaultEntity) List<DefaultEntity>.BinarySearch(DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.Clear() List<DefaultEntity>.Contains(DefaultEntity) List<DefaultEntity>.ConvertAll<TOutput>(Converter<DefaultEntity, TOutput>) List<DefaultEntity>.CopyTo(int, DefaultEntity[], int, int) List<DefaultEntity>.CopyTo(DefaultEntity[]) List<DefaultEntity>.CopyTo(DefaultEntity[], int) List<DefaultEntity>.EnsureCapacity(int) List<DefaultEntity>.Exists(Predicate<DefaultEntity>) List<DefaultEntity>.Find(Predicate<DefaultEntity>) List<DefaultEntity>.FindAll(Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(Predicate<DefaultEntity>) List<DefaultEntity>.FindLast(Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(Predicate<DefaultEntity>) List<DefaultEntity>.ForEach(Action<DefaultEntity>) List<DefaultEntity>.GetEnumerator() List<DefaultEntity>.GetRange(int, int) List<DefaultEntity>.IndexOf(DefaultEntity) List<DefaultEntity>.IndexOf(DefaultEntity, int) List<DefaultEntity>.IndexOf(DefaultEntity, int, int) List<DefaultEntity>.Insert(int, DefaultEntity) List<DefaultEntity>.InsertRange(int, IEnumerable<DefaultEntity>) List<DefaultEntity>.LastIndexOf(DefaultEntity) List<DefaultEntity>.LastIndexOf(DefaultEntity, int) List<DefaultEntity>.LastIndexOf(DefaultEntity, int, int) List<DefaultEntity>.Remove(DefaultEntity) List<DefaultEntity>.RemoveAll(Predicate<DefaultEntity>) List<DefaultEntity>.RemoveAt(int) List<DefaultEntity>.RemoveRange(int, int) List<DefaultEntity>.Reverse() List<DefaultEntity>.Reverse(int, int) List<DefaultEntity>.Slice(int, int) List<DefaultEntity>.Sort() List<DefaultEntity>.Sort(IComparer<DefaultEntity>) List<DefaultEntity>.Sort(Comparison<DefaultEntity>) List<DefaultEntity>.Sort(int, int, IComparer<DefaultEntity>) List<DefaultEntity>.ToArray() List<DefaultEntity>.TrimExcess() List<DefaultEntity>.TrueForAll(Predicate<DefaultEntity>) List<DefaultEntity>.Capacity List<DefaultEntity>.Count List<DefaultEntity>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PhonebookCollection() Initializes a new instance of the PhonebookCollection class. public PhonebookCollection()"
  },
  "api/Kepware.Api.Model.ProducerExchangeCollection.html": {
    "href": "api/Kepware.Api.Model.ProducerExchangeCollection.html",
    "title": "Class ProducerExchangeCollection | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class ProducerExchangeCollection Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the collection of producer exchanges in a producer exchange group [Endpoint(\"/config/v1/project/channels/{channelName}/devices/{deviceName}/producer_exchange_groups/{groupName}/producer_exchanges\", null)] public class ProducerExchangeCollection : EntityCollection<DefaultEntity>, IList<DefaultEntity>, ICollection<DefaultEntity>, IReadOnlyList<DefaultEntity>, IReadOnlyCollection<DefaultEntity>, IEnumerable<DefaultEntity>, IList, ICollection, IEnumerable, IHaveOwner Inheritance object List<DefaultEntity> EntityCollection<DefaultEntity> ProducerExchangeCollection Implements IList<DefaultEntity> ICollection<DefaultEntity> IReadOnlyList<DefaultEntity> IReadOnlyCollection<DefaultEntity> IEnumerable<DefaultEntity> IList ICollection IEnumerable IHaveOwner Inherited Members EntityCollection<DefaultEntity>.Owner List<DefaultEntity>.Add(DefaultEntity) List<DefaultEntity>.AddRange(IEnumerable<DefaultEntity>) List<DefaultEntity>.AsReadOnly() List<DefaultEntity>.BinarySearch(int, int, DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.BinarySearch(DefaultEntity) List<DefaultEntity>.BinarySearch(DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.Clear() List<DefaultEntity>.Contains(DefaultEntity) List<DefaultEntity>.ConvertAll<TOutput>(Converter<DefaultEntity, TOutput>) List<DefaultEntity>.CopyTo(int, DefaultEntity[], int, int) List<DefaultEntity>.CopyTo(DefaultEntity[]) List<DefaultEntity>.CopyTo(DefaultEntity[], int) List<DefaultEntity>.EnsureCapacity(int) List<DefaultEntity>.Exists(Predicate<DefaultEntity>) List<DefaultEntity>.Find(Predicate<DefaultEntity>) List<DefaultEntity>.FindAll(Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(Predicate<DefaultEntity>) List<DefaultEntity>.FindLast(Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(Predicate<DefaultEntity>) List<DefaultEntity>.ForEach(Action<DefaultEntity>) List<DefaultEntity>.GetEnumerator() List<DefaultEntity>.GetRange(int, int) List<DefaultEntity>.IndexOf(DefaultEntity) List<DefaultEntity>.IndexOf(DefaultEntity, int) List<DefaultEntity>.IndexOf(DefaultEntity, int, int) List<DefaultEntity>.Insert(int, DefaultEntity) List<DefaultEntity>.InsertRange(int, IEnumerable<DefaultEntity>) List<DefaultEntity>.LastIndexOf(DefaultEntity) List<DefaultEntity>.LastIndexOf(DefaultEntity, int) List<DefaultEntity>.LastIndexOf(DefaultEntity, int, int) List<DefaultEntity>.Remove(DefaultEntity) List<DefaultEntity>.RemoveAll(Predicate<DefaultEntity>) List<DefaultEntity>.RemoveAt(int) List<DefaultEntity>.RemoveRange(int, int) List<DefaultEntity>.Reverse() List<DefaultEntity>.Reverse(int, int) List<DefaultEntity>.Slice(int, int) List<DefaultEntity>.Sort() List<DefaultEntity>.Sort(IComparer<DefaultEntity>) List<DefaultEntity>.Sort(Comparison<DefaultEntity>) List<DefaultEntity>.Sort(int, int, IComparer<DefaultEntity>) List<DefaultEntity>.ToArray() List<DefaultEntity>.TrimExcess() List<DefaultEntity>.TrueForAll(Predicate<DefaultEntity>) List<DefaultEntity>.Capacity List<DefaultEntity>.Count List<DefaultEntity>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProducerExchangeCollection() Initializes a new instance of the ProducerExchangeCollection class. public ProducerExchangeCollection()"
  },
  "api/Kepware.Api.Model.ProducerExchangeGroupCollection.html": {
    "href": "api/Kepware.Api.Model.ProducerExchangeGroupCollection.html",
    "title": "Class ProducerExchangeGroupCollection | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class ProducerExchangeGroupCollection Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the collection of producer exchange groups in a device [Endpoint(\"/config/v1/project/channels/{channelName}/devices/{deviceName}/producer_exchange_groups\", null)] public class ProducerExchangeGroupCollection : EntityCollection<DefaultEntity>, IList<DefaultEntity>, ICollection<DefaultEntity>, IReadOnlyList<DefaultEntity>, IReadOnlyCollection<DefaultEntity>, IEnumerable<DefaultEntity>, IList, ICollection, IEnumerable, IHaveOwner Inheritance object List<DefaultEntity> EntityCollection<DefaultEntity> ProducerExchangeGroupCollection Implements IList<DefaultEntity> ICollection<DefaultEntity> IReadOnlyList<DefaultEntity> IReadOnlyCollection<DefaultEntity> IEnumerable<DefaultEntity> IList ICollection IEnumerable IHaveOwner Inherited Members EntityCollection<DefaultEntity>.Owner List<DefaultEntity>.Add(DefaultEntity) List<DefaultEntity>.AddRange(IEnumerable<DefaultEntity>) List<DefaultEntity>.AsReadOnly() List<DefaultEntity>.BinarySearch(int, int, DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.BinarySearch(DefaultEntity) List<DefaultEntity>.BinarySearch(DefaultEntity, IComparer<DefaultEntity>) List<DefaultEntity>.Clear() List<DefaultEntity>.Contains(DefaultEntity) List<DefaultEntity>.ConvertAll<TOutput>(Converter<DefaultEntity, TOutput>) List<DefaultEntity>.CopyTo(int, DefaultEntity[], int, int) List<DefaultEntity>.CopyTo(DefaultEntity[]) List<DefaultEntity>.CopyTo(DefaultEntity[], int) List<DefaultEntity>.EnsureCapacity(int) List<DefaultEntity>.Exists(Predicate<DefaultEntity>) List<DefaultEntity>.Find(Predicate<DefaultEntity>) List<DefaultEntity>.FindAll(Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindIndex(Predicate<DefaultEntity>) List<DefaultEntity>.FindLast(Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(int, Predicate<DefaultEntity>) List<DefaultEntity>.FindLastIndex(Predicate<DefaultEntity>) List<DefaultEntity>.ForEach(Action<DefaultEntity>) List<DefaultEntity>.GetEnumerator() List<DefaultEntity>.GetRange(int, int) List<DefaultEntity>.IndexOf(DefaultEntity) List<DefaultEntity>.IndexOf(DefaultEntity, int) List<DefaultEntity>.IndexOf(DefaultEntity, int, int) List<DefaultEntity>.Insert(int, DefaultEntity) List<DefaultEntity>.InsertRange(int, IEnumerable<DefaultEntity>) List<DefaultEntity>.LastIndexOf(DefaultEntity) List<DefaultEntity>.LastIndexOf(DefaultEntity, int) List<DefaultEntity>.LastIndexOf(DefaultEntity, int, int) List<DefaultEntity>.Remove(DefaultEntity) List<DefaultEntity>.RemoveAll(Predicate<DefaultEntity>) List<DefaultEntity>.RemoveAt(int) List<DefaultEntity>.RemoveRange(int, int) List<DefaultEntity>.Reverse() List<DefaultEntity>.Reverse(int, int) List<DefaultEntity>.Slice(int, int) List<DefaultEntity>.Sort() List<DefaultEntity>.Sort(IComparer<DefaultEntity>) List<DefaultEntity>.Sort(Comparison<DefaultEntity>) List<DefaultEntity>.Sort(int, int, IComparer<DefaultEntity>) List<DefaultEntity>.ToArray() List<DefaultEntity>.TrimExcess() List<DefaultEntity>.TrueForAll(Predicate<DefaultEntity>) List<DefaultEntity>.Capacity List<DefaultEntity>.Count List<DefaultEntity>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProducerExchangeGroupCollection() Initializes a new instance of the ProducerExchangeGroupCollection class. public ProducerExchangeGroupCollection()"
  },
  "api/Kepware.Api.Model.ProductInfo.html": {
    "href": "api/Kepware.Api.Model.ProductInfo.html",
    "title": "Class ProductInfo | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class ProductInfo Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents information about a product. public class ProductInfo Inheritance object ProductInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ProductId Gets or sets the product ID. [JsonPropertyName(\"product_id\")] public string ProductId { get; set; } Property Value string ProductName Gets or sets the product name. [JsonPropertyName(\"product_name\")] public string ProductName { get; set; } Property Value string ProductType Gets the type of the product. public ProductType ProductType { get; } Property Value ProductType ProductVersion Gets or sets the product version. [JsonPropertyName(\"product_version\")] public string ProductVersion { get; set; } Property Value string ProductVersionBuild Gets or sets the build version of the product. [JsonPropertyName(\"product_version_build\")] public int ProductVersionBuild { get; set; } Property Value int ProductVersionMajor Gets or sets the major version of the product. [JsonPropertyName(\"product_version_major\")] public int ProductVersionMajor { get; set; } Property Value int ProductVersionMinor Gets or sets the minor version of the product. [JsonPropertyName(\"product_version_minor\")] public int ProductVersionMinor { get; set; } Property Value int ProductVersionPatch Gets or sets the patch version of the product. [JsonPropertyName(\"product_version_patch\")] public int ProductVersionPatch { get; set; } Property Value int SupportsJsonProjectLoadService Gets a value indicating whether the product supports JSON project load service. [JsonIgnore] public bool SupportsJsonProjectLoadService { get; } Property Value bool"
  },
  "api/Kepware.Api.Model.ProductType.html": {
    "href": "api/Kepware.Api.Model.ProductType.html",
    "title": "Enum ProductType | Kepware Configuration API .NET SDK Documentation",
    "summary": "Enum ProductType Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents the type of product. public enum ProductType Fields KEPServerEX = 12 KEPServerEX. ThingWorxKepwareEdge = 13 Thing worx Kepware Edge. Unknown = 0 Unknown product type."
  },
  "api/Kepware.Api.Model.Project.html": {
    "href": "api/Kepware.Api.Model.Project.html",
    "title": "Class Project | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class Project Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents a project in the Kepware configuration [Endpoint(\"/config/v1/project\", null)] public class Project : BaseEntity, IEquatable<BaseEntity> Inheritance object BaseEntity Project Implements IEquatable<BaseEntity> Inherited Members BaseEntity.Hash BaseEntity.ProjectId BaseEntity.Description BaseEntity.TypeName BaseEntity.DynamicProperties BaseEntity.Equals(BaseEntity) BaseEntity.GetDynamicProperty<T>(string) BaseEntity.SetDynamicProperty<T>(string, T) BaseEntity.TryGetGetDynamicProperty<T>(string, out T) BaseEntity.CalculateHash() BaseEntity.AppendHashSources(CustomHashGenerator.HashSourceBuilder) BaseEntity.ConditionalNonSerialized() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Channels Gets or sets the channels in the project [YamlIgnore] [JsonPropertyName(\"channels\")] [JsonPropertyOrder(100)] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public ChannelCollection? Channels { get; set; } Property Value ChannelCollection IsLoadedByProjectLoadService If this is true the project was loaded by the JsonProjectLoad service (added to Kepware Server v6.17 / Kepware Edge v1.10) public bool IsLoadedByProjectLoadService { get; } Property Value bool Methods Cleanup(IKepwareDefaultValueProvider, bool, CancellationToken) Recursively cleans up the project and all its children public override Task Cleanup(IKepwareDefaultValueProvider defaultValueProvider, bool blnRemoveProjectId = false, CancellationToken cancellationToken = default) Parameters defaultValueProvider IKepwareDefaultValueProvider blnRemoveProjectId bool cancellationToken CancellationToken Returns Task CloneAsync(CancellationToken) public Task<Project> CloneAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<Project>"
  },
  "api/Kepware.Api.Model.Properties.NonSerialized.html": {
    "href": "api/Kepware.Api.Model.Properties.NonSerialized.html",
    "title": "Class Properties.NonSerialized | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class Properties.NonSerialized Namespace Kepware.Api.Model Assembly Kepware.Api.dll Contains constants related to non-serialized properties. public static class Properties.NonSerialized Inheritance object Properties.NonSerialized Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AsHashSet A set of non-serialized properties. public static readonly FrozenSet<string> AsHashSet Field Value FrozenSet<string> ChannelAssignment The channel assignment property key. public const string ChannelAssignment = \"servermain.DEVICE_CHANNEL_ASSIGNMENT\" Field Value string ChannelTagCount The static tag count in a channel property key. public const string ChannelTagCount = \"servermain.CHANNEL_STATIC_TAG_COUNT\" Field Value string DeviceStaticTagCount The static tag count in a device property key. public const string DeviceStaticTagCount = \"servermain.DEVICE_STATIC_TAG_COUNT\" Field Value string TagAutogenerated The autogenerated tag property key. public const string TagAutogenerated = \"servermain.TAG_AUTOGENERATED\" Field Value string TagGroupAutogenerated The autogenerated tag group property key. public const string TagGroupAutogenerated = \"servermain.TAGGROUP_AUTOGENERATED\" Field Value string TagGrpTagCount The local tag count in a tag group property key. public const string TagGrpTagCount = \"servermain.TAGGROUP_LOCAL_TAG_COUNT\" Field Value string TagGrpTotalTagCount The total tag count in a tag group property key. public const string TagGrpTotalTagCount = \"servermain.TAGGROUP_TOTAL_TAG_COUNT\" Field Value string"
  },
  "api/Kepware.Api.Model.Properties.NonUpdatable.html": {
    "href": "api/Kepware.Api.Model.Properties.NonUpdatable.html",
    "title": "Class Properties.NonUpdatable | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class Properties.NonUpdatable Namespace Kepware.Api.Model Assembly Kepware.Api.dll Contains constants related to non-updatable properties. public static class Properties.NonUpdatable Inheritance object Properties.NonUpdatable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AsHashSet A set of non-updatable properties. public static readonly FrozenSet<string> AsHashSet Field Value FrozenSet<string> ChannelUniqueId The channel unique ID property key. public const string ChannelUniqueId = \"servermain.CHANNEL_UNIQUE_ID\" Field Value string DeviceUniqueId The device unique ID property key. public const string DeviceUniqueId = \"servermain.DEVICE_UNIQUE_ID\" Field Value string"
  },
  "api/Kepware.Api.Model.Properties.Tag.html": {
    "href": "api/Kepware.Api.Model.Properties.Tag.html",
    "title": "Class Properties.Tag | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class Properties.Tag Namespace Kepware.Api.Model Assembly Kepware.Api.dll Contains constants related to tag properties. public static class Properties.Tag Inheritance object Properties.Tag Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Address The address property key. public const string Address = \"servermain.TAG_ADDRESS\" Field Value string DataType The data type property key. public const string DataType = \"servermain.TAG_DATA_TYPE\" Field Value string IgnoreWhenScalingDisalbedHashSet A set of properties to ignore when scaling is disabled. public static readonly FrozenSet<string> IgnoreWhenScalingDisalbedHashSet Field Value FrozenSet<string> ReadWriteAccess The read/write access property key. public const string ReadWriteAccess = \"servermain.TAG_READ_WRITE_ACCESS\" Field Value string ScalingClampHigh The scaling clamp high property key. public const string ScalingClampHigh = \"servermain.TAG_SCALING_CLAMP_HIGH\" Field Value string ScalingClampLow The scaling clamp low property key. public const string ScalingClampLow = \"servermain.TAG_SCALING_CLAMP_LOW\" Field Value string ScalingNegateValue The scaling negate value property key. public const string ScalingNegateValue = \"servermain.TAG_SCALING_NEGATE_VALUE\" Field Value string ScalingRawHigh The scaling raw high property key. public const string ScalingRawHigh = \"servermain.TAG_SCALING_RAW_HIGH\" Field Value string ScalingRawLow The scaling raw low property key. public const string ScalingRawLow = \"servermain.TAG_SCALING_RAW_LOW\" Field Value string ScalingScaledDataType The scaling scaled data type property key. public const string ScalingScaledDataType = \"servermain.TAG_SCALING_SCALED_DATA_TYPE\" Field Value string ScalingScaledHigh The scaling scaled high property key. public const string ScalingScaledHigh = \"servermain.TAG_SCALING_SCALED_HIGH\" Field Value string ScalingScaledLow The scaling scaled low property key. public const string ScalingScaledLow = \"servermain.TAG_SCALING_SCALED_LOW\" Field Value string ScalingType The scaling type property key. public const string ScalingType = \"servermain.TAG_SCALING_TYPE\" Field Value string ScalingUnits The scaling units property key. public const string ScalingUnits = \"servermain.TAG_SCALING_UNITS\" Field Value string ScanRateMilliseconds The scan rate in milliseconds property key. public const string ScanRateMilliseconds = \"servermain.TAG_SCAN_RATE_MILLISECONDS\" Field Value string"
  },
  "api/Kepware.Api.Model.Properties.html": {
    "href": "api/Kepware.Api.Model.Properties.html",
    "title": "Class Properties | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class Properties Namespace Kepware.Api.Model Assembly Kepware.Api.dll Contains constants and static properties related to Kepware API properties. public static class Properties Inheritance object Properties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ChannelUid The channel unique ID property key. public const string ChannelUid = \"servermain.CHANNEL_UNIQUE_ID\" Field Value string Description The description property key. public const string Description = \"common.ALLTYPES_DESCRIPTION\" Field Value string DeviceDriver The device driver property key. public const string DeviceDriver = \"servermain.MULTIPLE_TYPES_DEVICE_DRIVER\" Field Value string Name The name property key. public const string Name = \"common.ALLTYPES_NAME\" Field Value string ProjectId The project ID property key. public const string ProjectId = \"PROJECT_ID\" Field Value string"
  },
  "api/Kepware.Api.Model.RecursiveEndpointAttribute.html": {
    "href": "api/Kepware.Api.Model.RecursiveEndpointAttribute.html",
    "title": "Class RecursiveEndpointAttribute | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class RecursiveEndpointAttribute Namespace Kepware.Api.Model Assembly Kepware.Api.dll [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)] public class RecursiveEndpointAttribute : EndpointAttribute Inheritance object Attribute EndpointAttribute RecursiveEndpointAttribute Inherited Members EndpointAttribute.EndpointTemplate EndpointAttribute.Suffix Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RecursiveEndpointAttribute(string, string, Type, string?) public RecursiveEndpointAttribute(string endpointTemplate, string recursiveEnd, Type recursiveOwnerType, string? suffix = null) Parameters endpointTemplate string recursiveEnd string recursiveOwnerType Type suffix string Properties RecursiveEnd public string RecursiveEnd { get; } Property Value string RecursiveOwnerType public Type RecursiveOwnerType { get; } Property Value Type"
  },
  "api/Kepware.Api.Model.Tag.html": {
    "href": "api/Kepware.Api.Model.Tag.html",
    "title": "Class Tag | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class Tag Namespace Kepware.Api.Model Assembly Kepware.Api.dll Represents a tag in a device or tag group [RecursiveEndpoint(\"/config/v1/project/channels/{channelName}/devices/{deviceName}\", \"/tag_groups/{groupName}\", typeof(DeviceTagGroup), \"/tags/{tagName}\")] public class Tag : NamedEntity, IEquatable<BaseEntity>, IHaveOwner, IHaveName Inheritance object BaseEntity DefaultEntity NamedEntity Tag Implements IEquatable<BaseEntity> IHaveOwner IHaveName Inherited Members NamedEntity.Name NamedEntity.AppendHashSources(CustomHashGenerator.HashSourceBuilder) NamedEntity.GetUpdateDiff(NamedEntity, bool) DefaultEntity.Owner BaseEntity.Hash BaseEntity.ProjectId BaseEntity.Description BaseEntity.TypeName BaseEntity.DynamicProperties BaseEntity.Equals(BaseEntity) BaseEntity.GetDynamicProperty<T>(string) BaseEntity.SetDynamicProperty<T>(string, T) BaseEntity.TryGetGetDynamicProperty<T>(string, out T) BaseEntity.CalculateHash() BaseEntity.Cleanup(IKepwareDefaultValueProvider, bool, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods HelperExtentions.Flatten(NamedEntity?) HelperExtentions.Flatten(NamedEntity?, Type) Properties IsAutogenerated A flag indicating if the tag is autogenerated [YamlIgnore] [JsonIgnore] public bool IsAutogenerated { get; } Property Value bool TagAddress Gets or sets the tag address [YamlIgnore] [JsonIgnore] public string TagAddress { get; set; } Property Value string Methods ConditionalNonSerialized() If the tag has no scaling the scaling properties are not serialized protected override ISet<string>? ConditionalNonSerialized() Returns ISet<string>"
  },
  "api/Kepware.Api.Model.TagDataType.html": {
    "href": "api/Kepware.Api.Model.TagDataType.html",
    "title": "Enum TagDataType | Kepware Configuration API .NET SDK Documentation",
    "summary": "Enum TagDataType Namespace Kepware.Api.Model Assembly Kepware.Api.dll public enum TagDataType Fields BCD = 13 BCD – Packed BCD with two bytes, value range is 0-9999 Boolean = 1 Boolean – Binary value of true or false Byte = 3 Byte – 8-bit unsigned integer data Char = 2 Char – 8-bit signed integer data DWord = 7 DWord – 32-bit unsigned integer data Date = 15 Date – 8-byte floating point number (see Microsoft® Knowledge Base) Default = 0 Default – Uses the driver's default data type Double = 11 Double – 64-bit real value of the IEEE-754 standard definition Float = 10 Float – 32-bit real value of the IEEE-754 standard definition LBCD = 14 LBCD – Packed BCD with four bytes, value range is 0-99999999 LLong = 8 LLong – 64-bit signed integer data Long = 6 Long – 32-bit signed integer data QWord = 9 QWord – 64-bit unsigned integer data Short = 4 Short – 16-bit signed integer data String = 12 String – Null-terminated Unicode string Word = 5 Word – 16-bit unsigned integer data"
  },
  "api/Kepware.Api.Model.html": {
    "href": "api/Kepware.Api.Model.html",
    "title": "Namespace Kepware.Api.Model | Kepware Configuration API .NET SDK Documentation",
    "summary": "Namespace Kepware.Api.Model Classes ApiResult Represents the result of an API call. ApiStatus Represents the status of the Configuration API REST service. BaseEntity Abstract base class for all entities in the Kepware API. Channel Represents a channel in the project ChannelCollection Represents the collection of channels in a project ConsumerExchangeCollection Represents the collection of consumer exchanges in a consumer exchange group ConsumerExchangeGroupCollection Represents the collection of consumer exchange groups in a device DataTypeEnumConverterProvider DefaultEntity A default entity with an optional owner. Device Represents a device in a channel DeviceCollection Represents the collection of devices in a channel DeviceProfileCollection Represents the collection of deviceprofiles in a device DeviceTagCollection Represents the collection of tags in a device DeviceTagGroup Represents a tag group in a device DeviceTagGroupCollection Represents the collection of tag groups in a device or tag group DeviceTagGroupTagCollection Represents the collection of tag in a tag group Docs Contains classes and definitions for API documentation. Docs.Channel Represents a channel in the API documentation. Docs.CollectionDefinition Represents a collection definition in the API documentation. Docs.Device Represents a device in the API documentation. Docs.Driver Represents a driver in the API documentation. Docs.PropertyDefinition Represents a property definition in the API documentation. Docs.TypeDefinition Represents a type definition in the API documentation. EndpointAttribute EntityCollection<T> EntityFactory NamedEntity A named entity with a unique name and description. NamedUidEntity A named entity with a unique identifier. OmniAlarmCollection Represents the collection of omni gas alarms in an omni mapping OmniMappingCollection Represents the collection of omni mappings in an omni mapping group OmniMappingGroupCollection Represents the collection of omni mapping groups in a device PhoneEntryCollection Represents the collection of phone entries in a phonebook PhonebookCollection Represents the collection of phonebooks in a channel ProducerExchangeCollection Represents the collection of producer exchanges in a producer exchange group ProducerExchangeGroupCollection Represents the collection of producer exchange groups in a device ProductInfo Represents information about a product. Project Represents a project in the Kepware configuration Properties Contains constants and static properties related to Kepware API properties. Properties.NonSerialized Contains constants related to non-serialized properties. Properties.NonUpdatable Contains constants related to non-updatable properties. Properties.Tag Contains constants related to tag properties. RecursiveEndpointAttribute Tag Represents a tag in a device or tag group Interfaces IDataTypeEnumConverter IHaveName Interface for entities that have a name. IHaveOwner Interface for entities that have an owner. Enums ProductType Represents the type of product. TagDataType"
  },
  "api/Kepware.Api.Serializer.CsvTagSerializer.CsvHeaders.html": {
    "href": "api/Kepware.Api.Serializer.CsvTagSerializer.CsvHeaders.html",
    "title": "Class CsvTagSerializer.CsvHeaders | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class CsvTagSerializer.CsvHeaders Namespace Kepware.Api.Serializer Assembly Kepware.Api.dll public static class CsvTagSerializer.CsvHeaders Inheritance object CsvTagSerializer.CsvHeaders Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Address public const string Address = \"Address\" Field Value string ClampHigh public const string ClampHigh = \"Clamp High\" Field Value string ClampLow public const string ClampLow = \"Clamp Low\" Field Value string ClientAccess public const string ClientAccess = \"Client Access\" Field Value string DataType public const string DataType = \"Data Type\" Field Value string Description public const string Description = \"Description\" Field Value string EngUnits public const string EngUnits = \"Eng Units\" Field Value string NegateValue public const string NegateValue = \"Negate Value\" Field Value string RawHigh public const string RawHigh = \"Raw High\" Field Value string RawLow public const string RawLow = \"Raw Low\" Field Value string RespectDataType public const string RespectDataType = \"Respect Data Type\" Field Value string ScaledDataType public const string ScaledDataType = \"Scaled Data Type\" Field Value string ScaledHigh public const string ScaledHigh = \"Scaled High\" Field Value string ScaledLow public const string ScaledLow = \"Scaled Low\" Field Value string Scaling public const string Scaling = \"Scaling\" Field Value string ScanRate public const string ScanRate = \"Scan Rate\" Field Value string TagName public const string TagName = \"Tag Name\" Field Value string"
  },
  "api/Kepware.Api.Serializer.CsvTagSerializer.html": {
    "href": "api/Kepware.Api.Serializer.CsvTagSerializer.html",
    "title": "Class CsvTagSerializer | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class CsvTagSerializer Namespace Kepware.Api.Serializer Assembly Kepware.Api.dll Serializes and deserializes tags to and from CSV files public class CsvTagSerializer Inheritance object CsvTagSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CsvTagSerializer(ILogger<CsvTagSerializer>) Creates a new instance of CsvTagSerializer public CsvTagSerializer(ILogger<CsvTagSerializer> logger) Parameters logger ILogger<CsvTagSerializer> Methods ExportTagsAsync(string, IEnumerable<Dictionary<string, object?>>?, CancellationToken) Exports tags to a CSV file public Task ExportTagsAsync(string filePath, IEnumerable<Dictionary<string, object?>>? tags, CancellationToken cancellationToken = default) Parameters filePath string tags IEnumerable<Dictionary<string, object>> cancellationToken CancellationToken Returns Task ExportTagsAsync(string, List<Tag>?, IDataTypeEnumConverter, CancellationToken) Exports tags to a CSV file public Task ExportTagsAsync(string filePath, List<Tag>? tags, IDataTypeEnumConverter dataTypeEnumConverter, CancellationToken cancellationToken = default) Parameters filePath string tags List<Tag> dataTypeEnumConverter IDataTypeEnumConverter cancellationToken CancellationToken Returns Task ImportTagsAsync(string, IDataTypeEnumConverter, CancellationToken) Imports tags from a CSV file public Task<List<Tag>> ImportTagsAsync(string filePath, IDataTypeEnumConverter dataTypeEnumConverter, CancellationToken cancellationToken = default) Parameters filePath string dataTypeEnumConverter IDataTypeEnumConverter cancellationToken CancellationToken Returns Task<List<Tag>>"
  },
  "api/Kepware.Api.Serializer.JsonProjectRoot.html": {
    "href": "api/Kepware.Api.Serializer.JsonProjectRoot.html",
    "title": "Class JsonProjectRoot | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class JsonProjectRoot Namespace Kepware.Api.Serializer Assembly Kepware.Api.dll public class JsonProjectRoot Inheritance object JsonProjectRoot Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Project [JsonPropertyName(\"project\")] public Project? Project { get; set; } Property Value Project"
  },
  "api/Kepware.Api.Serializer.KepYamlContext.html": {
    "href": "api/Kepware.Api.Serializer.KepYamlContext.html",
    "title": "Class KepYamlContext | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class KepYamlContext Namespace Kepware.Api.Serializer Assembly Kepware.Api.dll [YamlStaticContext] [YamlSerializable(typeof(Channel))] [YamlSerializable(typeof(Device))] [YamlSerializable(typeof(DeviceTagGroup))] [YamlSerializable(typeof(DefaultEntity))] public class KepYamlContext : StaticContext Inheritance object StaticContext KepYamlContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KepYamlContext() public KepYamlContext() Methods GetFactory() Gets the factory to use for serialization and deserialization public override StaticObjectFactory GetFactory() Returns StaticObjectFactory GetTypeInspector() Gets the type inspector to use when statically serializing/deserializing YAML. public override ITypeInspector GetTypeInspector() Returns ITypeInspector GetTypeResolver() Gets the YamlDotNet.Serialization.ITypeResolver to use for serialization public override ITypeResolver GetTypeResolver() Returns ITypeResolver IsKnownType(Type) Gets whether the type is known to the context public override bool IsKnownType(Type type) Parameters type Type Type to check Returns bool"
  },
  "api/Kepware.Api.Serializer.StaticTypeInspector.html": {
    "href": "api/Kepware.Api.Serializer.StaticTypeInspector.html",
    "title": "Class StaticTypeInspector | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class StaticTypeInspector Namespace Kepware.Api.Serializer Assembly Kepware.Api.dll public class StaticTypeInspector : ITypeInspector Inheritance object StaticTypeInspector Implements ITypeInspector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StaticTypeInspector(ITypeResolver) public StaticTypeInspector(ITypeResolver typeResolver) Parameters typeResolver ITypeResolver Methods GetEnumName(Type, string) Returns the actual name from the EnumMember attribute public string GetEnumName(Type type, string name) Parameters type Type name string The name to lookup. Returns string The actual name of the enum value. GetEnumValue(object) Return the value of the enum public string GetEnumValue(object value) Parameters value object Returns string GetProperties(Type, object) Gets all properties of the specified type. public IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container) Parameters type Type The type whose properties are to be enumerated. container object The actual object of type type whose properties are to be enumerated. Can be null. Returns IEnumerable<IPropertyDescriptor> GetProperty(Type, object, string, bool, bool) Gets the property of the type with the specified name. public IPropertyDescriptor GetProperty(Type type, object container, string name, bool ignoreUnmatched, bool caseInsensitivePropertyMatching) Parameters type Type The type whose properties are to be searched. container object The actual object of type type whose properties are to be searched. Can be null. name string The name of the property. ignoreUnmatched bool Determines if an exception or null should be returned if name can't be found in type caseInsensitivePropertyMatching bool If true use case-insitivity when choosing the property or field. Returns IPropertyDescriptor"
  },
  "api/Kepware.Api.Serializer.YamlSerializer.html": {
    "href": "api/Kepware.Api.Serializer.YamlSerializer.html",
    "title": "Class YamlSerializer | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class YamlSerializer Namespace Kepware.Api.Serializer Assembly Kepware.Api.dll Provides methods for serializing and deserializing YAML data. public class YamlSerializer Inheritance object YamlSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors YamlSerializer(ILogger<YamlSerializer>) Initializes a new instance of the YamlSerializer class. public YamlSerializer(ILogger<YamlSerializer> logger) Parameters logger ILogger<YamlSerializer> The logger to use for logging information. Methods LoadFromYaml<T>(string, CancellationToken) Loads an entity from a YAML file. public Task<T> LoadFromYaml<T>(string filePath, CancellationToken cancellationToken = default) where T : BaseEntity, new() Parameters filePath string The path to the YAML file. cancellationToken CancellationToken A cancellation token to observe while waiting for the task to complete. Returns Task<T> The loaded entity. Type Parameters T The type of the entity to load. SaveAsYaml(string, object, CancellationToken) Saves an entity as a YAML file. public Task SaveAsYaml(string filePath, object entity, CancellationToken cancellationToken = default) Parameters filePath string The path to the YAML file. entity object The entity to save. cancellationToken CancellationToken A cancellation token to observe while waiting for the task to complete. Returns Task"
  },
  "api/Kepware.Api.Serializer.html": {
    "href": "api/Kepware.Api.Serializer.html",
    "title": "Namespace Kepware.Api.Serializer | Kepware Configuration API .NET SDK Documentation",
    "summary": "Namespace Kepware.Api.Serializer Classes CsvTagSerializer Serializes and deserializes tags to and from CSV files CsvTagSerializer.CsvHeaders JsonProjectRoot KepYamlContext StaticTypeInspector YamlSerializer Provides methods for serializing and deserializing YAML data."
  },
  "api/Kepware.Api.Util.CustomHashGenerator.HashSourceBuilder.html": {
    "href": "api/Kepware.Api.Util.CustomHashGenerator.HashSourceBuilder.html",
    "title": "Class CustomHashGenerator.HashSourceBuilder | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class CustomHashGenerator.HashSourceBuilder Namespace Kepware.Api.Util Assembly Kepware.Api.dll public class CustomHashGenerator.HashSourceBuilder : IEnumerable<KeyValuePair<string, object?>>, IEnumerable Inheritance object CustomHashGenerator.HashSourceBuilder Implements IEnumerable<KeyValuePair<string, object>> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HashSourceBuilder() public HashSourceBuilder() HashSourceBuilder(KeyValuePair<string, object?>) public HashSourceBuilder(KeyValuePair<string, object?> seed) Parameters seed KeyValuePair<string, object> Properties LinkedList public LinkedList<KeyValuePair<string, object?>> LinkedList { get; } Property Value LinkedList<KeyValuePair<string, object>> Methods Append(KeyValuePair<string, object?>) public CustomHashGenerator.HashSourceBuilder Append(KeyValuePair<string, object?> kvp) Parameters kvp KeyValuePair<string, object> Returns CustomHashGenerator.HashSourceBuilder Append<T>(string, T?) public CustomHashGenerator.HashSourceBuilder Append<T>(string key, T? value = default) Parameters key string value T Returns CustomHashGenerator.HashSourceBuilder Type Parameters T GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<KeyValuePair<string, object?>> GetEnumerator() Returns IEnumerator<KeyValuePair<string, object>> An enumerator that can be used to iterate through the collection."
  },
  "api/Kepware.Api.Util.CustomHashGenerator.html": {
    "href": "api/Kepware.Api.Util.CustomHashGenerator.html",
    "title": "Class CustomHashGenerator | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class CustomHashGenerator Namespace Kepware.Api.Util Assembly Kepware.Api.dll public abstract class CustomHashGenerator Inheritance object CustomHashGenerator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ComputeHash(IEnumerable<KeyValuePair<string, object?>>) Interne Methode zur Berechnung des Hashs unter Verwendung von FNV-1a. public static ulong ComputeHash(IEnumerable<KeyValuePair<string, object?>> data) Parameters data IEnumerable<KeyValuePair<string, object>> Das zu hashende Dictionary. Returns ulong Der berechnete Hashwert als long. CreateHashSourceBuilder() public static CustomHashGenerator.HashSourceBuilder CreateHashSourceBuilder() Returns CustomHashGenerator.HashSourceBuilder CreateHashSourceBuilder(KeyValuePair<string, object?>) public static CustomHashGenerator.HashSourceBuilder CreateHashSourceBuilder(KeyValuePair<string, object?> seed) Parameters seed KeyValuePair<string, object> Returns CustomHashGenerator.HashSourceBuilder CreateHashSourceBuilder<T>(string, T?) public static CustomHashGenerator.HashSourceBuilder CreateHashSourceBuilder<T>(string seedKey, T? seedValue = default) Parameters seedKey string seedValue T Returns CustomHashGenerator.HashSourceBuilder Type Parameters T"
  },
  "api/Kepware.Api.Util.EndpointResolver.html": {
    "href": "api/Kepware.Api.Util.EndpointResolver.html",
    "title": "Class EndpointResolver | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class EndpointResolver Namespace Kepware.Api.Util Assembly Kepware.Api.dll public static class EndpointResolver Inheritance object EndpointResolver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ResolveEndpoint<T>() public static string ResolveEndpoint<T>() Returns string Type Parameters T ResolveEndpoint<T>(NamedEntity?, string?) Resolves the endpoint for the specified entity type. public static string ResolveEndpoint<T>(NamedEntity? owner, string? itemName = null) Parameters owner NamedEntity itemName string Returns string Type Parameters T Exceptions InvalidOperationException ResolveEndpoint<T>(IEnumerable<string>) Resolves the endpoint for the specified entity type. public static string ResolveEndpoint<T>(IEnumerable<string> placeholderValues) Parameters placeholderValues IEnumerable<string> Returns string Type Parameters T Exceptions InvalidOperationException"
  },
  "api/Kepware.Api.Util.EntityCompare.CollectionResultBucket-1.html": {
    "href": "api/Kepware.Api.Util.EntityCompare.CollectionResultBucket-1.html",
    "title": "Class EntityCompare.CollectionResultBucket<K> | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class EntityCompare.CollectionResultBucket<K> Namespace Kepware.Api.Util Assembly Kepware.Api.dll Represents the result of comparing two collections of entities. public class EntityCompare.CollectionResultBucket<K> where K : BaseEntity Type Parameters K The type of the entity. Inheritance object EntityCompare.CollectionResultBucket<K> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CollectionResultBucket(IEnumerable<ResultBucket<K>>) Initializes a new instance of the EntityCompare.CollectionResultBucket<K> class. public CollectionResultBucket(IEnumerable<EntityCompare.ResultBucket<K>> results) Parameters results IEnumerable<EntityCompare.ResultBucket<K>> The comparison results. Properties ChangedItems The items that are in both the Left and Right but the properties are different. public ReadOnlyCollection<EntityCompare.ResultBucket<K>> ChangedItems { get; } Property Value ReadOnlyCollection<EntityCompare.ResultBucket<K>> ItemsOnlyInLeft The items that are in the Left but not in the Right. public ReadOnlyCollection<EntityCompare.ResultBucket<K>> ItemsOnlyInLeft { get; } Property Value ReadOnlyCollection<EntityCompare.ResultBucket<K>> ItemsOnlyInRight The items that are in the Right but not in the Left. public ReadOnlyCollection<EntityCompare.ResultBucket<K>> ItemsOnlyInRight { get; } Property Value ReadOnlyCollection<EntityCompare.ResultBucket<K>> UnchangedItems The items that are in both the Left and Right and the properties are the same. public ReadOnlyCollection<EntityCompare.ResultBucket<K>> UnchangedItems { get; } Property Value ReadOnlyCollection<EntityCompare.ResultBucket<K>>"
  },
  "api/Kepware.Api.Util.EntityCompare.CompareResult.html": {
    "href": "api/Kepware.Api.Util.EntityCompare.CompareResult.html",
    "title": "Enum EntityCompare.CompareResult | Kepware Configuration API .NET SDK Documentation",
    "summary": "Enum EntityCompare.CompareResult Namespace Kepware.Api.Util Assembly Kepware.Api.dll The result of comparing two entities. public enum EntityCompare.CompareResult Fields Changed = 1 The entity is in both the Left and Right but the properties are different. None = 0 The entity is in both the Left and Right and the properties are the same. PresentInLeftOnly = -1 The entity is in the Left but not in the Right. PresentInRightOnly = 2 The entity is in the Right but not in the Left."
  },
  "api/Kepware.Api.Util.EntityCompare.ResultBucket-1.html": {
    "href": "api/Kepware.Api.Util.EntityCompare.ResultBucket-1.html",
    "title": "Class EntityCompare.ResultBucket<T> | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class EntityCompare.ResultBucket<T> Namespace Kepware.Api.Util Assembly Kepware.Api.dll Represents the result of comparing two entities. public record EntityCompare.ResultBucket<T> : IEquatable<EntityCompare.ResultBucket<T>> Type Parameters T The type of the entity. Inheritance object EntityCompare.ResultBucket<T> Implements IEquatable<EntityCompare.ResultBucket<T>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CompareResult Gets the comparison result. public EntityCompare.CompareResult CompareResult { get; } Property Value EntityCompare.CompareResult Left Gets the left entity. public T? Left { get; } Property Value T LeftName Gets the name of the left entity. public string? LeftName { get; } Property Value string Right Gets the right entity. public T? Right { get; } Property Value T RightName Gets the name of the right entity. public string RightName { get; } Property Value string Methods Changed(T, T) Creates a result bucket indicating the entity is present in both collections but has changed. public static EntityCompare.ResultBucket<T> Changed(T left, T right) Parameters left T The left entity. right T The right entity. Returns EntityCompare.ResultBucket<T> The result bucket. PresentInLeft(T) Creates a result bucket indicating the entity is present in the left collection only. public static EntityCompare.ResultBucket<T> PresentInLeft(T left) Parameters left T The left entity. Returns EntityCompare.ResultBucket<T> The result bucket. PresentInRight(T) Creates a result bucket indicating the entity is present in the right collection only. public static EntityCompare.ResultBucket<T> PresentInRight(T right) Parameters right T The right entity. Returns EntityCompare.ResultBucket<T> The result bucket. Unchanged(T, T) Creates a result bucket indicating the entity is present in both collections and is unchanged. public static EntityCompare.ResultBucket<T> Unchanged(T left, T right) Parameters left T The left entity. right T The right entity. Returns EntityCompare.ResultBucket<T> The result bucket."
  },
  "api/Kepware.Api.Util.EntityCompare.html": {
    "href": "api/Kepware.Api.Util.EntityCompare.html",
    "title": "Class EntityCompare | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class EntityCompare Namespace Kepware.Api.Util Assembly Kepware.Api.dll Compares two entities and determines if they are the same, different, or if one is missing. Left represents the source and Right represents the target. PresentInRightOnly - The entity is in the Right but not in the Left. PresentInLeftOnly - The entity is in the Left but not in the Right. Changed - The entity is in both the Left and Right but the properties are different. None - The entity is in both the Left and Right and the properties are the same. public class EntityCompare Inheritance object EntityCompare Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Compare<T>(T?, T?) Compares two entities and returns the comparison result. public static EntityCompare.CompareResult Compare<T>(T? left, T? right) where T : NamedEntity Parameters left T The left entity. right T The right entity. Returns EntityCompare.CompareResult The comparison result. Type Parameters T The type of the entity. Compare<T, K>(T?, T?) Compares two collections of entities and returns the comparison results. public static EntityCompare.CollectionResultBucket<K> Compare<T, K>(T? left, T? right) where T : EntityCollection<K> where K : NamedEntity Parameters left T The left entity collection. right T The right entity collection. Returns EntityCompare.CollectionResultBucket<K> The comparison results. Type Parameters T The type of the entity collection. K The type of the entity. Compare<T, K>(T?, T?, Func<K, string>) Compares two collections of entities and returns the comparison results. public static EntityCompare.CollectionResultBucket<K> Compare<T, K>(T? left, T? right, Func<K, string> keySelector) where T : EntityCollection<K> where K : NamedEntity Parameters left T The left entity collection. right T The right entity collection. keySelector Func<K, string> The function to select the key for comparison. Returns EntityCompare.CollectionResultBucket<K> The comparison results. Type Parameters T The type of the entity collection. K The type of the entity."
  },
  "api/Kepware.Api.Util.EnvVariableResolver.html": {
    "href": "api/Kepware.Api.Util.EnvVariableResolver.html",
    "title": "Class EnvVariableResolver | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class EnvVariableResolver Namespace Kepware.Api.Util Assembly Kepware.Api.dll public static class EnvVariableResolver Inheritance object EnvVariableResolver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ResolveEnvironmentVariables(string) public static string ResolveEnvironmentVariables(string value) Parameters value string Returns string"
  },
  "api/Kepware.Api.Util.HelperExtentions.html": {
    "href": "api/Kepware.Api.Util.HelperExtentions.html",
    "title": "Class HelperExtentions | Kepware Configuration API .NET SDK Documentation",
    "summary": "Class HelperExtentions Namespace Kepware.Api.Util Assembly Kepware.Api.dll public static class HelperExtentions Inheritance object HelperExtentions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods EscapeDiskEntry(string) public static string EscapeDiskEntry(this string path) Parameters path string Returns string Except<K, V>(IDictionary<K, V>, ISet<K>, ISet<K>?, ISet<K>?) public static IEnumerable<KeyValuePair<K, V>> Except<K, V>(this IDictionary<K, V> source, ISet<K> except, ISet<K>? except2 = null, ISet<K>? except3 = null) Parameters source IDictionary<K, V> except ISet<K> except2 ISet<K> except3 ISet<K> Returns IEnumerable<KeyValuePair<K, V>> Type Parameters K V Flatten(NamedEntity?) public static IEnumerable<NamedEntity> Flatten(this NamedEntity? node) Parameters node NamedEntity Returns IEnumerable<NamedEntity> Flatten(NamedEntity?, Type) public static IEnumerable<NamedEntity> Flatten(this NamedEntity? node, Type matchingType) Parameters node NamedEntity matchingType Type Returns IEnumerable<NamedEntity> GetValue<T>(IDictionary<string, object?>, string) public static T? GetValue<T>(this IDictionary<string, object?> source, string key) Parameters source IDictionary<string, object> key string Returns T Type Parameters T UnescapeDiskEntry(string) public static string UnescapeDiskEntry(this string path) Parameters path string Returns string"
  },
  "api/Kepware.Api.Util.html": {
    "href": "api/Kepware.Api.Util.html",
    "title": "Namespace Kepware.Api.Util | Kepware Configuration API .NET SDK Documentation",
    "summary": "Namespace Kepware.Api.Util Classes CustomHashGenerator CustomHashGenerator.HashSourceBuilder EndpointResolver EntityCompare Compares two entities and determines if they are the same, different, or if one is missing. Left represents the source and Right represents the target. PresentInRightOnly - The entity is in the Right but not in the Left. PresentInLeftOnly - The entity is in the Left but not in the Right. Changed - The entity is in both the Left and Right but the properties are different. None - The entity is in both the Left and Right and the properties are the same. EntityCompare.CollectionResultBucket<K> Represents the result of comparing two collections of entities. EntityCompare.ResultBucket<T> Represents the result of comparing two entities. EnvVariableResolver HelperExtentions Enums EntityCompare.CompareResult The result of comparing two entities."
  },
  "api/Kepware.Api.html": {
    "href": "api/Kepware.Api.html",
    "title": "Namespace Kepware.Api | Kepware Configuration API .NET SDK Documentation",
    "summary": "Namespace Kepware.Api Classes KepwareApiClient Client for interacting with the Kepware server. KepwareApiClientExtentions KepwareApiClientOptions KepwareApiServiceCollectionExtensions Interfaces IKepwareDefaultValueProvider"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Kepware Configuration API .NET SDK Documentation",
    "summary": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Kepware Configuration API .NET SDK Documentation",
    "summary": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "Kepware Configuration API SDK for .NET | Kepware Configuration API .NET SDK Documentation",
    "summary": "Kepware Configuration API SDK for .NET Overview The Kepware Configuration API SDK for .NET provides tools and libraries to interact with the Kepware Configuration REST API, enabling configuration management for Kepware servers. This repository includes examples and utilities to streamline development for deployment tools, including a service for continuous synchronization and an API client library. This package is designed to work with all versions of Kepware that support the Configuration API including Thingworx Kepware Server (TKS), Thingworx Kepware Edge (TKE) and KEPServerEX (KEP). For reference, Kepware Server in this documentation will refer to both TKS and KEP versions. Features API Client Library: Simplify interaction with the Kepware Configuration API. Service for Synchronization: Bi-directional synchronization between Kepware servers and local filesystems. Support for one-way and two-way synchronization modes. Sample Applications: Demonstrates API usage with real-world examples. HTTPS Support: Certificate validation and secure connections. Projects This repository contains the following projects: 1. Kepware.Api A .NET library providing an easy-to-use client for interacting with the Kepware Configuration API. Includes functionality for managing channels, devices, tags, and more. Readme for Kepware.Api API reference documentation is available on TBD 2. KepwareSync.Service A service application for synchronizing configurations between Kepware servers and the local filesystem. It supports monitoring and synchronization in real time. Readme for KepwareSync.Service 1. Primary <-> Secondary Synchronization Automatically synchronize configurations between two Kepware instances. Changes are detected via the REST Config API and propagated to the other instance. +------------+ Sync +------------+ | Primary | <------------> | Secondary | | Kepware | | Kepware | +------------+ +------------+ 2. GIT Versioning of Configurations Synchronize configurations between a Kepware instance and the local filesystem bidirectionally. Changes in files are synced to Kepware and vice versa. Git operations like commits and pulls must be managed separately (e.g., using Git Sync Services or manual Git operations). +------------+ Sync +--------------+ Git +-------------+ | Kepware | <------------> | Local Files | <------------> | GIT Repo | +------------+ +--------------+ +-------------+ 3. Mass Deployment of Centralized Configurations Deploy a centralized GIT configuration across multiple Kepware instances. Configurations are provided locally via tools like Git or RSync and then synchronized to Kepware using the sync tool. Local specifics like device IP addresses or credentials can be customized using overwrite files. +--------------------+ | Central GIT Repo | +--------------------+ | (Git Sync / RSync) | +--------------+ +--------------+ +--------------+ | Kepware #1 | | Kepware #2 | | Kepware #n | | [Overwrite] | | [Overwrite] | | [Overwrite] | +--------------+ +--------------+ +--------------+ 3. Kepware.Api.Sample Sample console applications demonstrating how to use Kepware.Api NuGet package to interact with the Kepware Configuration API. Includes examples for creating channels, devices, and tags. Readme for Kepware.Api.Sample Contribution Guidelines We welcome contributions to this repository. Please review the Repository Guidelines for information on Commit Message Conventions, Pull Request process and other details. Licensing This SDK and service application is provided \"as is\" under the MIT License. See the LICENSE file for details. Support For any issues, please open an Issue within the repository. For questions or feature requests, please open a Discussion thread within the repository. See Repository Guidelines for more information. Need More Information Visit: Kepware.Api API Documentation on Github Pages Kepware.com PTC.com Ready to dive in? Check out the project-specific Readmes for detailed information on how to get started!"
  }
}