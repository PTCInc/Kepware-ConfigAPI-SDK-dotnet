using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using YamlDotNet.Serialization;

namespace Kepware.Api.Model
{
    /// <summary>
    /// Represents a tag in a device or tag group
    /// </summary>
    [RecursiveEndpoint("/config/v1/project/channels/{channelName}/devices/{deviceName}", "/tag_groups/{groupName}", typeof(DeviceTagGroup), suffix: "/tags/{tagName}")]
    public class Tag : NamedEntity
    {
        /// <summary>
        /// A flag indicating if the tag is autogenerated
        /// </summary>
        [YamlIgnore, JsonIgnore]
        public bool IsAutogenerated => GetDynamicProperty<bool?>(Properties.NonSerialized.TagAutogenerated) == true;

        /// <summary>
        /// Gets or sets the tag address
        /// </summary>
        [YamlIgnore, JsonIgnore]
        public string TagAddress
        {
            get => GetDynamicProperty<string?>(Properties.Tag.Address) ?? string.Empty;
            set => SetDynamicProperty(Properties.Tag.Address, value);
        }

        /// <summary>
        /// If the tag has no scaling the scaling properties are not serialized
        /// </summary>
        /// <returns></returns>
        protected override ISet<string>? ConditionalNonSerialized()
        {
            if (GetDynamicProperty<int>(Properties.Tag.ScalingType) == 0)
            {
                return Properties.Tag.IgnoreWhenScalingDisalbedHashSet;
            }
            return null;
        }
    }
}
