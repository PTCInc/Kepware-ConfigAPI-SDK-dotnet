using System;
using System.Collections.Frozen;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;

namespace Kepware.Api.Model
{
    /// <summary>
    /// Contains constants and static properties related to Kepware API properties.
    /// </summary>
    public partial class Properties
    {
        /// <summary>
        /// The description property key.
        /// </summary>
        public const string Description = "common.ALLTYPES_DESCRIPTION";
        /// <summary>
        /// The name property key.
        /// </summary>
        public const string Name = "common.ALLTYPES_NAME";
        /// <summary>
        /// The project ID property key.
        /// </summary>
        public const string ProjectId = "PROJECT_ID";
        

        /// <summary>
        /// Contains constants related to non-updatable properties.
        /// </summary>
        public static class NonUpdatable
        {
            /// <summary>
            /// The channel unique ID property key.
            /// </summary>
            public const string ChannelUniqueId = "servermain.CHANNEL_UNIQUE_ID";
            /// <summary>
            /// The device unique ID property key.
            /// </summary>
            public const string DeviceUniqueId = "servermain.DEVICE_UNIQUE_ID";

            /// <summary>
            /// A set of non-updatable properties.
            /// </summary>
            public static readonly FrozenSet<string> AsHashSet = new HashSet<string>()
                {
                    ChannelUniqueId,
                    DeviceUniqueId,
                }.ToFrozenSet();
        }

        /// <summary>
        /// Contains constants related to non-serialized properties.
        /// </summary>
        public static class NonSerialized
        {
            /// <summary>
            /// The channel assignment property key.
            /// </summary>
            public const string ChannelAssignment = "servermain.DEVICE_CHANNEL_ASSIGNMENT";
            /// <summary>
            /// The total tag count in a tag group property key.
            /// </summary>
            public const string TagGrpTotalTagCount = "servermain.TAGGROUP_TOTAL_TAG_COUNT";
            /// <summary>
            /// The local tag count in a tag group property key.
            /// </summary>
            public const string TagGrpTagCount = "servermain.TAGGROUP_LOCAL_TAG_COUNT";
            /// <summary>
            /// The static tag count in a channel property key.
            /// </summary>
            public const string ChannelTagCount = "servermain.CHANNEL_STATIC_TAG_COUNT";
            /// <summary>
            /// The autogenerated tag group property key.
            /// </summary>
            public const string TagGroupAutogenerated = "servermain.TAGGROUP_AUTOGENERATED";
            /// <summary>
            /// The autogenerated tag property key.
            /// </summary>
            public const string TagAutogenerated = "servermain.TAG_AUTOGENERATED";
            /// <summary>
            /// The static tag count in a device property key.
            /// </summary>
            public const string DeviceStaticTagCount = "servermain.DEVICE_STATIC_TAG_COUNT";

            /// <summary>
            /// A set of non-serialized properties.
            /// </summary>
            public static readonly FrozenSet<string> AsHashSet = new HashSet<string>()
                    {
                        ChannelAssignment,
                        TagGrpTotalTagCount,
                        TagGrpTagCount,
                        ChannelTagCount,
                        TagGroupAutogenerated,
                        TagAutogenerated ,
                        DeviceStaticTagCount,
                    }.ToFrozenSet();
        }

        /// <summary>
        /// Don't allow instantiation of this class
        /// </summary>
        protected Properties()
        {
        }
    }
}
